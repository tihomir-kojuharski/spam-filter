import re

__FRAUD_DBI = re.compile(b"(?:\bdollars?\b|\busd(?:ollars)?(?:[0-9]|\b)|\bus\$|\$[0-9,.]{6,}|\$[0-9].{0,8}[mb]illion|\$[0-9.,]{2,10}?m|\beuros?\b|u[.]?s[.]?[0-9.]+m)", re.IGNORECASE)
__FRAUD_KJV = re.compile(b"(?:claim|concerning)(?:the|this)money", re.IGNORECASE)
__FRAUD_IRJ = re.compile(b"(?:finance|holding|securit(?:ies|y))(?:company|firm|storagehouse)", re.IGNORECASE)
__FRAUD_NEB = re.compile(b"(?:government|bank)ofnigeria", re.IGNORECASE)
__FRAUD_XJR = re.compile(b"(?:whowasa|asa|an?honest|youbeinga|toany)foreigner", re.IGNORECASE)
__FRAUD_DPR = re.compile(b"\b(?:(?:respond|reply)(?:urgently|immediately)|(?:urgent|immediate|earliest)(?:reply|response))\b", re.IGNORECASE)
__FRAUD_PTS = re.compile(b"\b(?:ass?ass?inat(?:ed|ion)|murder(?:e?d)?|kill(?:ed|ing)\b[^.]{0,99}\b(?:warveterans|rebels?))\b", re.IGNORECASE)
__FRAUD_BEP = re.compile(b"\b(?:bankofnigeria|centralbankof|trustbank|apexbank|amalgamatedbank)\b", re.IGNORECASE)
__FRAUD_TDP = re.compile(b"\b(?:businesspartner(?:s|ship)?|silentpartner(?:s|ship)?)\b", re.IGNORECASE)
__FRAUD_GAN = re.compile(b"\b(?:charlestaylor|serena|abacha|gu[e]i|sese[-]?seko|kabila)\b", re.IGNORECASE)
__FRAUD_IRT = re.compile(b"\b(?:compliments?ofthe|dearfriend|dearsir|yoursfaithfully|season'?sgreetings)\b", re.IGNORECASE)
__FRAUD_AON = re.compile(b"\b(?:confidential|private|alternate|alternative)(?:(?:e-?)?mail)\b", re.IGNORECASE)
__FRAUD_WNY = re.compile(b"\b(?:disburse?(?:ment)?|incurr?(?:ed)?|remunerr?at(?:ed?|ion)|remm?itt?(?:ed|ance|ing)?)\b", re.IGNORECASE)
__FRAUD_IPK = re.compile(b"\b(?:in|to|visit)yourcountry\b", re.IGNORECASE)
__FRAUD_QXX = re.compile(b"\b(?:mynameis|iam)(?:mrs?|engr|barrister|dr|prince(?:ss)?)[.]", re.IGNORECASE)
__FRAUD_IOU = re.compile(b"\b(?:norisks?|risk-?free|freeofrisks?|100%safe)\b", re.IGNORECASE)
__FRAUD_EZY = re.compile(b"\b(?:of|the)latepresident\b", re.IGNORECASE)
__FRAUD_MLY = re.compile(b"\b(?:reply|respond)\b[^.]{0,50}\b(?:to|through)\b[^.]{0,50}\@\b", re.IGNORECASE)
__FRAUD_ZFJ = re.compile(b"\b(?:wife|son|brother|daughter)ofthelate\b", re.IGNORECASE)
__FRAUD_KDT = re.compile(b"\bU\.?S\.?(?:D\.?)?\s*(?:\$\s*)?(?:\d+,\d+,\d+|\d+\.\d+\.\d+|\d+(?:\.\d+)?\s*milli?on)", re.IGNORECASE)
__FRAUD_ULK = re.compile(b"\baffidavits?\b", re.IGNORECASE)
__FRAUD_BGP = re.compile(b"\battachedtoticketnumber\b", re.IGNORECASE)
__FRAUD_FBI = re.compile(b"\bdisburs", re.IGNORECASE)
__FRAUD_JBU = re.compile(b"\bforeignaccount\b", re.IGNORECASE)
__FRAUD_YWW = re.compile(b"\bfurnishyouwith\b", re.IGNORECASE)
__FRAUD_JYG = re.compile(b"\bgive\s+you.{0,15}(?:fund|money|total|sum|contact|percent)\b", re.IGNORECASE)
__FRAUD_XVW = re.compile(b"\bhonestcooperation\b", re.IGNORECASE)
__FRAUD_UUY = re.compile(b"\blegitimatebusiness(?:es)?\b", re.IGNORECASE)
__FRAUD_SNT = re.compile(b"\blocate(?:.{1,20})?extendedrelative", re.IGNORECASE)
__FRAUD_LTX = re.compile(b"\bmilli?on(?:.{1,25}thousand\s*)?(?:(?:unitedstates|u\.?s\.?)dollars)\b", re.IGNORECASE)
__FRAUD_JNB = re.compile(b"\boperat(?:e|ing)\b[^.]{0,99}\b(?:for(?:ei|ie)gn|off-??shore|over-??seas?)(?:bank)?accounts?\b", re.IGNORECASE)
__FRAUD_QFY = re.compile(b"\bover-?(?:invoiced?|cost(?:s|ing)?)\b", re.IGNORECASE)
__FRAUD_WDR = re.compile(b"\bprivatelawyer\b", re.IGNORECASE)
__FRAUD_WFC = re.compile(b"\bsecur(?:e|ing)(?:the)?(?:funds?|monies)\b", re.IGNORECASE)
__FRAUD_AUM = re.compile(b"\bthedeskof\b", re.IGNORECASE)
__FRAUD_MCQ = re.compile(b"\btransaction\b.{1,30}\b(?:magnitude|diplomatic|strict|absolute|secret|confiden(?:tial|ce)|guarantee)", re.IGNORECASE)
__FRAUD_ETX = re.compile(b"\byour\b[^.]{0,99}\b(?:contact(?:details|information)|private(?:e?[-]?mail|telephone|tel|phone|fax))\b", re.IGNORECASE)
__FRAUD_PVN = re.compile(b"asthebeneficiary", re.IGNORECASE)
__FRAUD_FVU = re.compile(b"awardnotification", re.IGNORECASE)
__FRAUD_CKF = re.compile(b"computerballotsystem", re.IGNORECASE)
__FRAUD_FCW = re.compile(b"fiduciaryagent", re.IGNORECASE)
__FRAUD_MQO = re.compile(b"foreign(?:businesspartner|customer)", re.IGNORECASE)
__FRAUD_TCC = re.compile(b"foreign(?:offshore)?(?:bank|account)", re.IGNORECASE)
__FRAUD_GBW = re.compile(b"godgives.{1,10}secondchance", re.IGNORECASE)
__FRAUD_NRG = re.compile(b"iamcontactingyou", re.IGNORECASE)
__FRAUD_RLX = re.compile(b"lott(?:o|ery)(?:co,?ordinator|international)", re.IGNORECASE)
__FRAUD_AXF = re.compile(b"magnanimity", re.IGNORECASE)
__FRAUD_THJ = re.compile(b"modalit(?:y|ies)", re.IGNORECASE)
__FRAUD_YQV = re.compile(b"nigerian?(?:national|government)", re.IGNORECASE)
__FRAUD_YJA = re.compile(b"over-invoice", re.IGNORECASE)
__FRAUD_YPO = re.compile(b"thetotalsum", re.IGNORECASE)
__FRAUD_UOQ = re.compile(b"vitaldocuments", re.IGNORECASE)
GTUBE = re.compile(b"XJS\*C4JDBQADN1\.NSBN3\*2IDNEN\*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL\*C\.34X", re.IGNORECASE)
TRACKER_ID = re.compile(b"^[a-z0-9]{6,24}[-_a-z0-9]{12,36}[a-z0-9]{6,24}\s*", re.IGNORECASE)
WEIRD_QUOTING = re.compile(b"[\042\223\224\262\263\271]{2}\S{0,16}[\042\223\224\262\263\271]{2}", re.IGNORECASE)
EMAIL_ROT13 = re.compile(b"\b[a-z(\]-]+\^[a-z-]+\([a-z]{2,3}\b", re.IGNORECASE)
__LONGWORDS_A = re.compile(b"\b(?:[a-z]{8,}[\s\.]+){6}", re.IGNORECASE)
__LONGWORDS_B = re.compile(b"\b(?:[a-z]{6,}[\s\.]+){9}", re.IGNORECASE)
__LONGWORDS_C = re.compile(b"\b(?:[a-z]{5,}[\s\.]+){10}", re.IGNORECASE)
MPART_ALT_DIFF = re.compile(b"eval:multipart_alternative_difference('99','100')", re.IGNORECASE)
MPART_ALT_DIFF_COUNT = re.compile(b"eval:multipart_alternative_difference_count('3','1')", re.IGNORECASE)
BLANK_LINES_80_90 = re.compile(b"eval:check_blank_line_ratio('80','90','4')", re.IGNORECASE)
__TVD_SPACE_RATIO = re.compile(b"eval:tvd_vertical_words('0','10')", re.IGNORECASE)
MULTIPART_ALT_NON_TEXT = re.compile(b"eval:check_ma_non_text()", re.IGNORECASE)
CHARSET_FARAWAY = re.compile(b"eval:check_for_faraway_charset()", re.IGNORECASE)
MISSING_MIME_HB_SEP = re.compile(b"eval:check_msg_parse_flags('missing_mime_head_body_separator')", re.IGNORECASE)
MIME_HTML_MOSTLY = re.compile(b"eval:check_mime_multipart_ratio('0.00','0.01')", re.IGNORECASE)
MIME_HTML_ONLY = re.compile(b"eval:check_for_mime_html_only()", re.IGNORECASE)
MIME_BAD_ISO_CHARSET = re.compile(b"eval:check_for_mime('mime_bad_iso_charset')", re.IGNORECASE)
HTTPS_IP_MISMATCH = re.compile(b"eval:check_https_ip_mismatch()", re.IGNORECASE)
URI_TRUNCATED = re.compile(b"eval:check_uri_truncated()", re.IGNORECASE)
DRUG_DOSAGE = re.compile(b"[\d\.]?\$?(?:[\\\\/]|per)*d.?o.?s.?e", re.IGNORECASE)
DRUG_ED_CAPS = re.compile(b"\b(?:CIALIS|LEVITRA|VIAGRA)", re.IGNORECASE)
DRUG_ED_SILD = re.compile(b"\bsildenafil\b", re.IGNORECASE)
DRUG_ED_GENERIC = re.compile(b"\bGenericViagra\b", re.IGNORECASE)
DRUG_ED_ONLINE = re.compile(b"\bviagra.{0,25}(?:express|online|overnight)", re.IGNORECASE)
ONLINE_PHARMACY = re.compile(b"\bonlinepharmacy|\b(?:drugs|medications)online", re.IGNORECASE)
NO_PRESCRIPTION = re.compile(b"N[o0].{1,10}P(?:er|re)scr[i1]pt[i1][o0]n.{1,10}(?:n[e3][e3]d[e3]d|requ[1i]re|n[e3]c[e3]ssary)", re.IGNORECASE)
VIA_GAP_GRA = re.compile(b"\bvia.gra\b", re.IGNORECASE)
__DRUGS_ERECTILE_V = re.compile(b"\bViagra\b", re.IGNORECASE)
__DRUGS_ERECTILE_C = re.compile(b"\bCialis\b", re.IGNORECASE)
__DRUGS_ERECTILE_L = re.compile(b"\bLevitra\b", re.IGNORECASE)
__DRUGS_ERECTILE1 = re.compile(b"(?:\b|\s)[_\W]{0,3}(?:\\\/|V)[_\W]{0,3}[ij1!|l\xEC\xED\xEE\xEF][_\W]{0,3}[a40\xE0-\xE6@][_\W]{0,3}[xyz]?[gj][_\W]{0,3}r[_\W]{0,3}[a40\xE0-\xE6@][_\W]{0,3}x?[_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_ERECTILE2 = re.compile(b"\bV(?:agira|igara|iaggra|iaegra)\b", re.IGNORECASE)
__DRUGS_ERECTILE3 = re.compile(b"(?:\A|[\s\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f])[_\W]{0,3}C[_\W]{0,3}[ij1!|l\xEC\xED\xEE\xEF][_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}l?[l!|1][_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}s[_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_ERECTILE4 = re.compile(b"\bC(?:alis|ilias|ilais)\b", re.IGNORECASE)
__DRUGS_ERECTILE5 = re.compile(b"\b_{0,3}s[_\W]?[i1!|l\xEC-\xEF][_\W]?l[_\W]?d[_\W]?[e3\xE8-\xEB][_\W]?n[_\W]?[a4\xE0-\xE6@][_\W]?f[_\W]?[i1!|l\xEC-\xEF][_\W]?lc[_\W]?[i1!|l\xEC-\xEF][_\W]?t[_\W]?r[_\W]?[a4\xE0-\xE6@][_\W]?t[_\W]?[e3\xE8-\xEB]_{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_ERECTILE6 = re.compile(b"\b_{0,3}L[_\W]?[e3\xE8-\xEB][_\W]?(?:\\\/|V)[_\W]?[i1!|l\xEC-\xEF][_\W]?t[_\W]?r[_\W]?[a4\xE0-\xE6@][_\W]?(?:\b|\s)", re.IGNORECASE)
__DRUGS_ERECTILE8 = re.compile(b"\b_{0,3}T[_\W]?[a4\xE0-\xE6@][_\W]?d[_\W]?[a4\xE0-\xE6@][_\W]?l[_\W]?[a4\xE0-\xE6@][_\W]?f[_\W]?[i1!|l\xEC-\xEF][_\W]?l_{0,3}\b", re.IGNORECASE)
__DRUGS_ERECTILE11 = re.compile(b"(?:\b|\s)_{0,3}[a4\xE0-\xE6@][_\W]{0,3}p[_\W]{0,3}c[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}[l!|1][_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}s_{0,3}\b", re.IGNORECASE)
__DRUGS_DIET_PHEN = re.compile(b"\bphentermine\b", re.IGNORECASE)
__DRUGS_DIET1 = re.compile(b"(?:\b|\s)[_\W]{0,3}p[_\W]{0,3}h[_\W]{0,3}[e3\xE8-\xEB][_\W]{0,3}n[_\W]{0,3}t[_\W]{0,3}[e3\xE8-\xEB][_\W]{0,3}r[_\W]{0,3}m[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}n[_\W]{0,3}[e3\xE8-\xEB][_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_DIET2 = re.compile(b"(?:\b|\s)_{0,3}[i1!|l\xEC-\xEF][_\W]?o[_\W]?n[_\W]?[a4\xE0-\xE6@][_\W]?m[_\W]?[i1!|l\xEC-\xEF][_\W]?n_{0,3}\b", re.IGNORECASE)
__DRUGS_DIET3 = re.compile(b"\bbontril\b", re.IGNORECASE)
__DRUGS_DIET4 = re.compile(b"\bphendimetrazine\b", re.IGNORECASE)
__DRUGS_DIET5 = re.compile(b"\bdiethylpropion\b", re.IGNORECASE)
__DRUGS_DIET6 = re.compile(b"(?:\b|\s)[_\W]{0,3}M[_\W]{0,3}[e3\xE8-\xEB][_\W]{0,3}r[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}d[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_DIET7 = re.compile(b"\b_{0,3}t[_\W]?[e3\xE8-\xEB][_\W]?n[_\W]?u[_\W]?a[_\W]?t[_\W]?[e3\xE8-\xEB]_{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_DIET8 = re.compile(b"\b_{0,3}d[_\W]?[i1!|l\xEC-\xEF][_\W]?d[_\W]?r[_\W][e3\xE8-\xEB[_\W]?xx?_{0,3}\b", re.IGNORECASE)
__DRUGS_DIET9 = re.compile(b"\b_{0,3}a[_\W]?d[_\W]?[i1!|l\xEC-\xEF][_\W]?p[_\W]?[e3\xE8-\xEB][_\W]?x_{0,3}\b", re.IGNORECASE)
__DRUGS_DIET10 = re.compile(b"\b_{0,3}x?x[_\W]?[e3\xE8-\xEB][_\W]?n[_\W]?[i1!|l\xEC-\xEF][_\W]?c[_\W]?[a4\xE0-\xE6@][_\W]?l_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN_VICO = re.compile(b"vicodin", re.IGNORECASE)
__DRUGS_PAIN_VIOXX = re.compile(b"vioxx", re.IGNORECASE)
__DRUGS_PAIN_FIO = re.compile(b"fioricet", re.IGNORECASE)
__DRUGS_PAIN1 = re.compile(b"\b_{0,3}h[_\W]?y[_\W]?d[_\W]?r[_\W]?[o0\xF2-\xF6][_\W]?c[_\W]?[o0\xF2-\xF6][_\W]?d[_\W]?[o0\xF2-\xF6][_\W]?n[_\W]?e_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN2 = re.compile(b"\b_{0,3}c[o0\xF2-\xF6]deine_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN3 = re.compile(b"(?:\b|\s)[_\W]{0,3}[u\xB5\xF9-\xFC][_\W]{0,3}l[_\W]{0,3}t[_\W]{0,3}r[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}m_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN4 = re.compile(b"(?:\b|\s)[_\W]{0,3}(?:\\\/|V)[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}c[_\W]{0,3}[o0\xF2-\xF6][_\W]{0,3}d[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}ns?[_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_PAIN5 = re.compile(b"\b_{0,3}t[_\W]?r[_\W]?[a4\xE0-\xE6@][_\W]?m[_\W]?[a4\xE0-\xE6@][_\W]?d[_\W]?[o0\xF2-\xF6][_\W]?[l!|1]_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN6 = re.compile(b"\b_{0,3}u[_\W]?l[_\W]?t[_\W]?r[_\W]?a[_\W]?c[_\W]?e[_\W]?t_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN7 = re.compile(b"\b_{0,3}f[_\W]?[i1!|l\xEC-\xEF][_\W]?[o0\xF2-\xF6][_\W]?r[_\W]?[i1!|l\xEC-\xEF][_\W]?c[_\W]?[e3\xE8-\xEB][_\W]?[t7]_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN8 = re.compile(b"\b_{0,3}c[_\W]?[e3\xE8-\xEB][_\W]?l[_\W]?[e3\xE8-\xEB][_\W]?b[_\W]?r[_\W]?[e3\xE8-\xEB][_\W]?x_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN9 = re.compile(b"(?:\b|\s)_{0,3}[i1!|l\xEC-\xEF]m[i1!|l\xEC-\xEF]tr[e3\xE8-\xEB]x_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN10 = re.compile(b"(?:\b|\s)[_\W]{0,3}(?:\\\/|V)[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}[o0\xF2-\xF6][_\W]{0,3}x[_\W]{0,3}xx?_{0,3}\b", re.IGNORECASE)
__DRUGS_PAIN11 = re.compile(b"\bzebutal\b", re.IGNORECASE)
__DRUGS_PAIN12 = re.compile(b"\besgicplus\b", re.IGNORECASE)
__DRUGS_PAIN13 = re.compile(b"\bD[_\W]?[a4\xE0-\xE6@][_\W]?r[_\W]?v[_\W]?[o0\xF2-\xF6][_\W]?n\b", re.IGNORECASE)
__DRUGS_PAIN14 = re.compile(b"N[o0\xF2-\xF6]rc[o0\xF2-\xF6]", re.IGNORECASE)
__DRUGS_SLEEP1 = re.compile(b"(?:\b|\s)[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}m[_\W]{0,3}b[_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}[e3\xE8-\xEB][_\W]{0,3}n[_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_SLEEP2 = re.compile(b"(?:\b|\s)[_\W]{0,3}S[_\W]{0,3}[o0\xF2-\xF6][_\W]{0,3}n[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}t[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_SLEEP3 = re.compile(b"\b_{0,3}R[_\W]?[e3\xE8-\xEB][_\W]?s[_\W]?t[_\W]?[o0\xF2-\xF6][_\W]?r[_\W]?i[_\W]?l_{0,3}\b", re.IGNORECASE)
__DRUGS_SLEEP4 = re.compile(b"\b_{0,3}H[_\W]?[a4\xE0-\xE6@][_\W]?l[_\W]?c[_\W]?i[_\W]?[o0\xF2-\xF6][_\W]?n_{0,3}\b", re.IGNORECASE)
__DRUGS_MUSCLE1 = re.compile(b"(?:\b|\s)[_\W]{0,3}s[_\W]{0,3}[o0\xF2-\xF6][_\W]{0,3}m[_\W]{0,3}[a4\xE0-\xE3\xE5\xE6@][_\W]{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_MUSCLE2 = re.compile(b"\b_{0,3}cycl[o0\xF2-\xF6]b[e3\xE8-\xEB]nz[a4\xE0-\xE6@]pr[i1!|l\xEC-\xEF]n[e3\xE8-\xEB]_{0,3}(?:\b|\s)", re.IGNORECASE)
__DRUGS_MUSCLE3 = re.compile(b"\b_{0,3}f[_\W]?l[_\W]?[e3\xE8-\xEB][_\W]?x[_\W]?[e3\xE8-\xEB][_\W]?r[_\W]?[i1!|l\xEC-\xEF]_{0,3}[_\W]?l_{0,3}\b", re.IGNORECASE)
__DRUGS_MUSCLE4 = re.compile(b"\b_{0,3}z[_\W]?a[_\W]?n[_\W]?a[_\W]?f[_\W]?l[_\W]?e[_\W]?x_{0,3}\b", re.IGNORECASE)
__DRUGS_MUSCLE5 = re.compile(b"\bskelaxin\b", re.IGNORECASE)
__DRUGS_ANXIETY_XAN = re.compile(b"xan[ae]x", re.IGNORECASE)
__DRUGS_ANXIETY_VAL = re.compile(b"valium", re.IGNORECASE)
__DRUGS_ANXIETY1 = re.compile(b"(?:\b|\s)[_\W]{0,3}x?x[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}n[_\W]{0,3}[ea4\xE1\xE2\xE3@][_\W]{0,3}xx?_{0,3}\b", re.IGNORECASE)
__DRUGS_ANXIETY2 = re.compile(b"\bAlprazolam\b", re.IGNORECASE)
__DRUGS_ANXIETY3 = re.compile(b"(?:\b|\s)[_\W]{0,3}(?:\\\/|V)[_\W]{0,3}[a4\xE0-\xE6@][_\W]{0,3}[l|][_\W]{0,3}[i1!|l\xEC-\xEF][_\W]{0,3}[u\xB5\xF9-\xFC][_\W]{0,3}m\b", re.IGNORECASE)
__DRUGS_ANXIETY4 = re.compile(b"\b_{0,3}D[_\W]?[i1!|l\xEC-\xEF][_\W]?[a4\xE0-\xE6@][_\W]?z[_\W]?[ea3\xE9\xEA\xEB][_\W]?p[_\W]?[a4\xE0-\xE6@][_\W]?m_{0,3}\b", re.IGNORECASE)
__DRUGS_ANXIETY5 = re.compile(b"(?:\b|\s)[a4\xE0-\xE6@][_\W]?t[_\W]?[i1!|l\xEC-\xEF][_\W]?v[_\W]?[a4\xE0-\xE6@][_\W]?n_{0,3}\b", re.IGNORECASE)
__DRUGS_ANXIETY6 = re.compile(b"\b_{0,3}l[_\W]?[o0\xF2-\xF6][_\W]?r[_\W]?[a4\xE0-\xE6@][_\W]?z[_\W]?[e3\xE8-\xEB][_\W]?p[_\W]?[a4\xE0-\xE6@][_\W]?m_{0,3}\b", re.IGNORECASE)
__DRUGS_ANXIETY7 = re.compile(b"\b_{0,3}c[_\W]?l[_\W]?[o0\xF2-\xF6][_\W]?n[_\W]?[a4\xE0-\xE6@][_\W]?z[_\W]?e[_\W]?p[_\W]?[a4\xE0-\xE6@][_\W]?m\b", re.IGNORECASE)
__DRUGS_ANXIETY8 = re.compile(b"\bklonopin\b", re.IGNORECASE)
__DRUGS_ANXIETY9 = re.compile(b"\brivotril\b", re.IGNORECASE)
DRUGS_SMEAR1 = re.compile(b"(?:Viagra|Valium|Xanax|Soma|Cialis){2}", re.IGNORECASE)
__freemail_safe_fwd = re.compile(b"---\s?(?:(?:Forwarded|Original)message|Alkuper.inenviesti)", re.IGNORECASE)
__JAPANESE_UCE_BODY = re.compile(b"(?:L\$>5Bz|EE;R%a!<%k)(?:8x|9-)9p", re.IGNORECASE)
__HIGHBITS = re.compile(b"(?:[\x80-\xff].?){4}", re.IGNORECASE)
HTML_MESSAGE = re.compile(b"eval:html_test('html')", re.IGNORECASE)
HTML_COMMENT_SHORT = re.compile(b"eval:html_text_match('comment','<!(?!-).{0,6}>')", re.IGNORECASE)
HTML_COMMENT_SAVED_URL = re.compile(b"eval:html_text_match('comment','<!--savedfromurl=\(\d{4}\)')", re.IGNORECASE)
HTML_EMBEDS = re.compile(b"eval:html_test('embeds')", re.IGNORECASE)
HTML_EXTRA_CLOSE = re.compile(b"eval:html_range('closed_extra_ratio','0.09','inf')", re.IGNORECASE)
HTML_FONT_SIZE_LARGE = re.compile(b"eval:html_range('max_size','5','6')", re.IGNORECASE)
HTML_FONT_SIZE_HUGE = re.compile(b"eval:html_range('max_size','6','inf')", re.IGNORECASE)
HTML_FONT_LOW_CONTRAST = re.compile(b"eval:html_test('font_low_contrast')", re.IGNORECASE)
HTML_FONT_FACE_BAD = re.compile(b"eval:html_test('font_face_bad')", re.IGNORECASE)
HTML_FORMACTION_MAILTO = re.compile(b"eval:html_test('form_action_mailto')", re.IGNORECASE)
HTML_IMAGE_ONLY_04 = re.compile(b"eval:html_image_only('0000','0400')", re.IGNORECASE)
HTML_IMAGE_ONLY_08 = re.compile(b"eval:html_image_only('0400','0800')", re.IGNORECASE)
HTML_IMAGE_ONLY_12 = re.compile(b"eval:html_image_only('0800','1200')", re.IGNORECASE)
HTML_IMAGE_ONLY_16 = re.compile(b"eval:html_image_only('1200','1600')", re.IGNORECASE)
HTML_IMAGE_ONLY_20 = re.compile(b"eval:html_image_only('1600','2000')", re.IGNORECASE)
HTML_IMAGE_ONLY_24 = re.compile(b"eval:html_image_only('2000','2400')", re.IGNORECASE)
HTML_IMAGE_ONLY_28 = re.compile(b"eval:html_image_only('2400','2800')", re.IGNORECASE)
HTML_IMAGE_ONLY_32 = re.compile(b"eval:html_image_only('2800','3200')", re.IGNORECASE)
HTML_IMAGE_RATIO_02 = re.compile(b"eval:html_image_ratio('0.000','0.002')", re.IGNORECASE)
HTML_IMAGE_RATIO_04 = re.compile(b"eval:html_image_ratio('0.002','0.004')", re.IGNORECASE)
HTML_IMAGE_RATIO_06 = re.compile(b"eval:html_image_ratio('0.004','0.006')", re.IGNORECASE)
HTML_IMAGE_RATIO_08 = re.compile(b"eval:html_image_ratio('0.006','0.008')", re.IGNORECASE)
HTML_OBFUSCATE_05_10 = re.compile(b"eval:html_range('obfuscation_ratio','.05','.1')", re.IGNORECASE)
HTML_OBFUSCATE_10_20 = re.compile(b"eval:html_range('obfuscation_ratio','.1','.2')", re.IGNORECASE)
HTML_OBFUSCATE_20_30 = re.compile(b"eval:html_range('obfuscation_ratio','.2','.3')", re.IGNORECASE)
HTML_OBFUSCATE_30_40 = re.compile(b"eval:html_range('obfuscation_ratio','.3','.4')", re.IGNORECASE)
HTML_OBFUSCATE_50_60 = re.compile(b"eval:html_range('obfuscation_ratio','.5','.6')", re.IGNORECASE)
HTML_OBFUSCATE_70_80 = re.compile(b"eval:html_range('obfuscation_ratio','.7','.8')", re.IGNORECASE)
HTML_OBFUSCATE_90_100 = re.compile(b"eval:html_range('obfuscation_ratio','.9','1.0')", re.IGNORECASE)
HTML_TAG_BALANCE_BODY = re.compile(b"eval:html_tag_balance('body','!=0')", re.IGNORECASE)
HTML_TAG_BALANCE_HEAD = re.compile(b"eval:html_tag_balance('head','!=0')", re.IGNORECASE)
HTML_TAG_EXIST_BGSOUND = re.compile(b"eval:html_tag_exists('bgsound')", re.IGNORECASE)
HTML_BADTAG_40_50 = re.compile(b"eval:html_range('bad_tag_ratio','0.40','0.50')", re.IGNORECASE)
HTML_BADTAG_50_60 = re.compile(b"eval:html_range('bad_tag_ratio','0.50','0.60')", re.IGNORECASE)
HTML_BADTAG_60_70 = re.compile(b"eval:html_range('bad_tag_ratio','0.60','0.70')", re.IGNORECASE)
HTML_BADTAG_90_100 = re.compile(b"eval:html_range('bad_tag_ratio','0.90','1.00')", re.IGNORECASE)
HTML_NONELEMENT_30_40 = re.compile(b"eval:html_range('non_element_ratio','0.30','0.40')", re.IGNORECASE)
HTML_NONELEMENT_40_50 = re.compile(b"eval:html_range('non_element_ratio','0.40','0.50')", re.IGNORECASE)
HTML_NONELEMENT_60_70 = re.compile(b"eval:html_range('non_element_ratio','0.60','0.70')", re.IGNORECASE)
HTML_NONELEMENT_80_90 = re.compile(b"eval:html_range('non_element_ratio','0.80','0.90')", re.IGNORECASE)
__HTML_LINK_IMAGE = re.compile(b"eval:html_text_match('anchor','<img>')", re.IGNORECASE)
__HTML_LENGTH_0000_1024 = re.compile(b"eval:html_range('length','0','1024')", re.IGNORECASE)
__HTML_LENGTH_1024_1536 = re.compile(b"eval:html_range('length','1024','1536')", re.IGNORECASE)
__HTML_LENGTH_1536_2048 = re.compile(b"eval:html_range('length','1536','2048')", re.IGNORECASE)
__HTML_LENGTH_512 = re.compile(b"eval:html_eval('length','<512')", re.IGNORECASE)
__COMMENT_EXISTS = re.compile(b"eval:html_text_match('comment','<!.*?>')", re.IGNORECASE)
__HTML_LENGTH_384 = re.compile(b"eval:html_eval('length','<384')", re.IGNORECASE)
__TAG_EXISTS_CENTER = re.compile(b"eval:html_tag_exists('center')", re.IGNORECASE)
__HTML_TITLE_120 = re.compile(b"eval:html_text_match('title','.{120}')", re.IGNORECASE)
__HTML_TITLE_SUBJ_DIFF = re.compile(b"eval:html_title_subject_ratio('3.5')", re.IGNORECASE)
__HTML_CHARSET_FARAWAY = re.compile(b"eval:html_charset_faraway()", re.IGNORECASE)
HTML_IFRAME_SRC = re.compile(b"eval:check_iframe_src()", re.IGNORECASE)
__MIME_ATTACHMENT = re.compile(b"eval:check_for_mime('mime_attachment')", re.IGNORECASE)
__DC_IMG_TEXT_RATIO = re.compile(b"eval:image_to_text_ratio('all','0.000','0.008')", re.IGNORECASE)
__GIF_ATTACH_1 = re.compile(b"eval:image_count('gif','1','1')", re.IGNORECASE)
__GIF_ATTACH_2P = re.compile(b"eval:image_count('gif','2')", re.IGNORECASE)
__PNG_ATTACH_1 = re.compile(b"eval:image_count('png','1','1')", re.IGNORECASE)
__PNG_ATTACH_2P = re.compile(b"eval:image_count('png','2')", re.IGNORECASE)
__JPEG_ATTACH_1 = re.compile(b"eval:image_count('jpeg',1,1)", re.IGNORECASE)
__JPEG_ATTACH_2P = re.compile(b"eval:image_count('jpeg',2)", re.IGNORECASE)
__GIF_AREA_180K = re.compile(b"eval:pixel_coverage('gif','180000','475000')", re.IGNORECASE)
__PNG_AREA_180K = re.compile(b"eval:pixel_coverage('png','180000','475000')", re.IGNORECASE)
# __ISO_2022_JP_DELIM = re.compile(b"\e\$B", re.IGNORECASE)
__NONEMPTY_BODY = re.compile(b"\S", re.IGNORECASE)
__UPPERCASE_25_50 = re.compile(b"eval:check_for_uppercase('25','50')", re.IGNORECASE)
__UPPERCASE_50_75 = re.compile(b"eval:check_for_uppercase('50','75')", re.IGNORECASE)
__UPPERCASE_75_100 = re.compile(b"eval:check_for_uppercase('75','100')", re.IGNORECASE)
REMOVE_BEFORE_LINK = re.compile(b"(?:nothanks|notinterested|unsubscribehere).{0,5}http://", re.IGNORECASE)
GUARANTEED_100_PERCENT = re.compile(b"100%GUARANTEED", re.IGNORECASE)
DEAR_FRIEND = re.compile(b"^\s*DearFriend\b", re.IGNORECASE)
DEAR_SOMETHING = re.compile(b"\bDear(?:IT\W|Internet|candidate|sirs?|madam|investor|travell?er|carshopper|web)\b", re.IGNORECASE)
BILLION_DOLLARS = re.compile(b"[BM]ILLIONDOLLAR", re.IGNORECASE)
EXCUSE_4 = re.compile(b"ToBeRemoved,?Please", re.IGNORECASE)
EXCUSE_24 = re.compile(b"you(?:'ve|'re|have|are)?receiv(?:e|ed|ing)this(?:advertisement|offer|special|recurring|paid).{0,16}\b(?:byeither|because)", re.IGNORECASE)
EXCUSE_REMOVE = re.compile(b"toberemovedfrom.{0,20}(?:mailings|offers)", re.IGNORECASE)
STRONG_BUY = re.compile(b"strongbuy", re.IGNORECASE)
STOCK_ALERT = re.compile(b"\bstockalert", re.IGNORECASE)
NOT_ADVISOR = re.compile(b"notaregisteredinvestmentadvisor", re.IGNORECASE)
PREST_NON_ACCREDITED = re.compile(b"prestigi?ous\b.{0,20}\bnon-accredited\b.{0,20}\buniversities", re.IGNORECASE)
BODY_ENHANCEMENT = re.compile(b"\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b).{0,50}\b(?:penis|maleorgan|pee[-]?pee|dick|sc?hlong|wh?anger|breast(?!\s+cancer))", re.IGNORECASE)
BODY_ENHANCEMENT2 = re.compile(b"\b(?:penis|maleorgan|pee[-]?pee|dick|sc?hlong|wh?anger|breast(?!\s+cancer)).{0,50}\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b|size)", re.IGNORECASE)
IMPOTENCE = re.compile(b"\b(?:impotence(?:problem|cure|solution)|PrematureEjaculation|erectiledysfunction)", re.IGNORECASE)
NA_DOLLARS = re.compile(b"\b(?:\d{1,3})?Million\b.{0,40}\b(?:CanadianDollar?s?|US\$|U\.??S\.?Dollar)", re.IGNORECASE)
US_DOLLARS_3 = re.compile(b"(?:\$|usd).?\d{1,3}[,.]\d{3}[,.]\d{3}(?:[,.]\d\d)?", re.IGNORECASE)
MILLION_USD = re.compile(b"Million\b.{0,40}\b(?:UnitedStates?Dollars?|USD)", re.IGNORECASE)
URG_BIZ = re.compile(b"urgent.{0,16}(?:assistance|business|buy|confidential|notice|proposal|reply|request|response)", re.IGNORECASE)
MONEY_BACK = re.compile(b"moneybackguarantee", re.IGNORECASE)
FREE_QUOTE_INSTANT = re.compile(b"free.{0,12}(?:(?:instant|express|online|no.?obligation).{0,4})+.{0,32}\bquote", re.IGNORECASE)
BAD_CREDIT = re.compile(b"\b(?:bad|poor|no\b|eliminate|repair|(?:re)?establish|damag).{0,10}(?:credit|debt)\b", re.IGNORECASE)
REFINANCE_YOUR_HOME = re.compile(b"\brefinanceyour(?:current)?(?:home|house)\b", re.IGNORECASE)
REFINANCE_NOW = re.compile(b"timetorefinance|refinanc\w{1,3}\b.{0,16}\bnow\b", re.IGNORECASE)
NO_MEDICAL = re.compile(b"\bnomedicalexam", re.IGNORECASE)
DIET_1 = re.compile(b"\b(?:(?:without|no)(?:exercis(?:e(?!price)|ing)|dieting)|weight.?loss|(?:extra|lose|lost|losing).{0,10}(?:pounds|weight|inches|lbs)|burn.{1,10}fat)\b", re.IGNORECASE)
FIN_FREE = re.compile(b"\bfinancial(?:ly)?(?:free|independen)", re.IGNORECASE)
FORWARD_LOOKING = re.compile(b"\bcontainsforward-lookingstatements\b", re.IGNORECASE)
ONE_TIME = re.compile(b"\bone\W+time(?:charge|investment|offer|promotion)", re.IGNORECASE)
JOIN_MILLIONS = re.compile(b"\bjoin(?:millions|thousands)\b", re.IGNORECASE)
MARKETING_PARTNERS = re.compile(b"\b(?:marketing|network)partner|\bpartner(?:web)?site", re.IGNORECASE)
LOW_PRICE = re.compile(b"\blow.{0,4}(?:[Pp])rice", re.IGNORECASE)
UNCLAIMED_MONEY = re.compile(b"\bunclaimed\s(?:assets?|accounts?|mon(?:ey|ies)|balance|funds?|prizes?|rewards?|payments?|deposits?)\b", re.IGNORECASE)
OBSCURED_EMAIL = re.compile(b"\w+\^\S+\(\w{2,4}\b", re.IGNORECASE)
BANG_OPRAH = re.compile(b"\boprah!", re.IGNORECASE)
ACT_NOW_CAPS = re.compile(b"\bA(?:ct)N(?:ow)\b", re.IGNORECASE)
MORE_SEX = re.compile(b"increased?.{0,9}(?:sex|stamina)", re.IGNORECASE)
BANG_GUAR = re.compile(b"\bguaranteed?\!", re.IGNORECASE)
__RUDE_HTML_1 = re.compile(b"Getacapablehtmle-mailer", re.IGNORECASE)
__RUDE_HTML_2 = re.compile(b"notsupportthedisplayofHTML.Pleaseviewthismessageinadifferent", re.IGNORECASE)
__RUDE_HTML_3 = re.compile(b"ThismessagecontainsanHTMLformattedmessagebutyouremailclientdoes", re.IGNORECASE)
__RUDE_HTML_4 = re.compile(b"YourmailerdonotsupportHTMLmessages.Switchtoabettermailer", re.IGNORECASE)
INVESTMENT_ADVICE = re.compile(b"\binvestmentadvice", re.IGNORECASE)
MALE_ENHANCE = re.compile(b"maleenhancement", re.IGNORECASE)
PRICES_ARE_AFFORDABLE = re.compile(b"\baffordable.{0,10}prices\b", re.IGNORECASE)
REPLICA_WATCH = re.compile(b"\breplica.{1,20}rolex", re.IGNORECASE)
EM_ROLEX = re.compile(b"[^\s\w.]rolex", re.IGNORECASE)
FREE_PORN = re.compile(b"\bfree(?:porn|xxx|adult)", re.IGNORECASE)
CUM_SHOT = re.compile(b"\bcum[-]?shots?\b", re.IGNORECASE)
LIVE_PORN = re.compile(b"\blive.{0,9}(?:fuck(?:ing)?|sex|naked|girls?|virgins?|teens?|porno?)\b", re.IGNORECASE)
__MIME_HTML = re.compile(b"eval:check_for_mime_html()", re.IGNORECASE)
__TAG_EXISTS_BODY = re.compile(b"eval:html_tag_exists('body')", re.IGNORECASE)
__TAG_EXISTS_HEAD = re.compile(b"eval:html_tag_exists('head')", re.IGNORECASE)
__TAG_EXISTS_HTML = re.compile(b"eval:html_tag_exists('html')", re.IGNORECASE)
__TAG_EXISTS_META = re.compile(b"eval:html_tag_exists('meta')", re.IGNORECASE)
__TAG_EXISTS_STYLE = re.compile(b"eval:html_tag_exists('style')", re.IGNORECASE)
__TAG_EXISTS_SCRIPT = re.compile(b"eval:html_tag_exists('script')", re.IGNORECASE)
__MY_SERVERS_FOUND = re.compile(b"eval:check_whitelist_bounce_relays()", re.IGNORECASE)
__HAVE_BOUNCE_RELAYS = re.compile(b"eval:have_any_bounce_relays()", re.IGNORECASE)
__BOUNCE_ESMTP = re.compile(b"^Thismessageswascreatedautomaticallybymaildeliverysoftware", re.IGNORECASE)
__BOUNCE_OOO_2 = re.compile(b"\bI?.mawayuntil.{10,20}andamunabletoreadyourmessage\b", re.IGNORECASE)
__BOUNCE_OOO_3 = re.compile(b"\bIamcurrentlyoutoftheoffice\b", re.IGNORECASE)
__BOUNCE_NEVER_SEE = re.compile(b"\bThisisanautoresponder.I'llneverseeyourmessage\b", re.IGNORECASE)
__BOUNCE_NONWORKING = re.compile(b"\bYouhavereachedanon.?workingaddress.Pleasecheck\b", re.IGNORECASE)
__BOUNCE_ETRUST = re.compile(b"^eTrustSecureContentManagerSMTPMAILcouldnotdeliverthee-mail", re.IGNORECASE)
__BOUNCE_NO_RESEND = re.compile(b"\bPleasedonotresendyouroriginalmessage\.", re.IGNORECASE)
__VBOUNCE_EXIM = re.compile(b"apotentiallyexecutableattachment", re.IGNORECASE)
__VBOUNCE_STRIP_ATTACH = re.compile(b"\bhasstrippedoneormoreattachmentsfromthefollowingmessage\b", re.IGNORECASE)
__VBOUNCE_GUIN = re.compile(b"messagecontainsfileattachmentsthatarenotpermitted", re.IGNORECASE)
__VBOUNCE_CISCO = re.compile(b"^Foundvirus\S+infile\S/m", re.IGNORECASE)
__VBOUNCE_SMTP = re.compile(b"host\S+said:5\d\d\s+Error:Messagecontentrejected", re.IGNORECASE)
__VBOUNCE_AOL = re.compile(b"TRANSACTIONFAILED-UnrepairableVirusDetected.", re.IGNORECASE)
__VBOUNCE_DUTCH = re.compile(b"bevattebijlagebesmetwelkebesmetwasmeteenvirus", re.IGNORECASE)
__VBOUNCE_MAILMARSHAL = re.compile(b"Mail.?MarshalRule:InboundMessages:BlockDangerousAttachments", re.IGNORECASE)
__VBOUNCE_VALERT = re.compile(b"Themailmessage\S+\S+yousentto\S+containsthevirus", re.IGNORECASE)
__VBOUNCE_REJ_FILT = re.compile(b"Reason:Rejectedbyfilter", re.IGNORECASE)
__VBOUNCE_MAILSWEEP = re.compile(b"MAILsweeperhasfoundthata\S+\S+\S+\S+oneormorevirus", re.IGNORECASE)
__VBOUNCE_NAV3 = re.compile(b"^Reporting-MTA:NortonAnti.?VirusGateway", re.IGNORECASE)
__VBOUNCE_AMAVISD2 = re.compile(b"\bVIRUS\b", re.IGNORECASE)
__VBOUNCE_DOMINO2 = re.compile(b"^IncidentInformation:", re.IGNORECASE)
__VBOUNCE_ATTACHMENT0 = re.compile(b"(?:Attachment.{0,40}wasDeleted|theinfectedattachment)", re.IGNORECASE)
__VBOUNCE_AVREPORT0 = re.compile(b"(antivirussystemreport|theantivirusmodulehas|illegalattachment|UnrepairableVirusDetected)", re.IGNORECASE)
__VBOUNCE_MAILSWEEP2 = re.compile(b"\bblockedbyMailsweeper\b", re.IGNORECASE)
__VBOUNCE_CLICKBANK = re.compile(b"\bvirusscannerdeletedyourmessage\b", re.IGNORECASE)
__VBOUNCE_QUOTED_EXE = re.compile(b">TVqQAAMAAAAEAAAA", re.IGNORECASE)
__VBOUNCE_ATT_QUAR = re.compile(b"\bTheattachmentwasquarantined\b", re.IGNORECASE)
__VBOUNCE_SECURIQ = re.compile(b"\bGROUPsecuriQ.Wall\b", re.IGNORECASE)
BAYES_00 = re.compile(b"eval:check_bayes('0.00','0.01')", re.IGNORECASE)
BAYES_05 = re.compile(b"eval:check_bayes('0.01','0.05')", re.IGNORECASE)
BAYES_20 = re.compile(b"eval:check_bayes('0.05','0.20')", re.IGNORECASE)
BAYES_40 = re.compile(b"eval:check_bayes('0.20','0.40')", re.IGNORECASE)
BAYES_50 = re.compile(b"eval:check_bayes('0.40','0.60')", re.IGNORECASE)
BAYES_60 = re.compile(b"eval:check_bayes('0.60','0.80')", re.IGNORECASE)
BAYES_80 = re.compile(b"eval:check_bayes('0.80','0.95')", re.IGNORECASE)
BAYES_95 = re.compile(b"eval:check_bayes('0.95','0.99')", re.IGNORECASE)
BAYES_99 = re.compile(b"eval:check_bayes('0.99','1.00')", re.IGNORECASE)
MICROSOFT_EXECUTABLE = re.compile(b"eval:check_microsoft_executable()", re.IGNORECASE)
MIME_SUSPECT_NAME = re.compile(b"eval:check_suspect_name()", re.IGNORECASE)
FUZZY_AFFORDABLE = re.compile(b"<interW1><postP2>(?!affordable)<A><F><F><O><R><D><A><B><L><E>", re.IGNORECASE)
FUZZY_AMBIEN = re.compile(b"<interW1><postP2>(?<!t)(?!ambien)(?!ombien)<A><M><B><I><E><N>", re.IGNORECASE)
FUZZY_BILLION = re.compile(b"(?!billion)<B><I><L><L><I><O><N>", re.IGNORECASE)
FUZZY_CPILL = re.compile(b"(?!ciali[sz])<C><I><A><L><I><S>", re.IGNORECASE)
FUZZY_CREDIT = re.compile(b"<interW1>(?![ck]r[e\xe9]dit)<C><R><E><D><I><T>", re.IGNORECASE)
FUZZY_ERECT = re.compile(b"<interW2><postP3>(?!erection)<E><R><E><C><T><I><O><N>", re.IGNORECASE)
FUZZY_GUARANTEE = re.compile(b"<interW1><postP2>(?!guarantee)<G><U><A><R><A><N><T><E><E>", re.IGNORECASE)
FUZZY_MEDICATION = re.compile(b"<interW1><postP2>(?!medicati[eo])<M><E><D><I><C><A><T><I><O><N>", re.IGNORECASE)
FUZZY_MILLION = re.compile(b"(?!milli?[o\xf3\xd3]n)<M><I><L><L><I><O><N>", re.IGNORECASE)
FUZZY_MONEY = re.compile(b"(?!money)<M><O><N><E><Y>", re.IGNORECASE)
FUZZY_MORTGAGE = re.compile(b"<interW1><postP2>(?!mortgage)<M><O><R><T><G><A><G><E>", re.IGNORECASE)
FUZZY_OBLIGATION = re.compile(b"<interW1><postP2>(?!obligation)<O><B><L><I><G><A><T><I><O><N>", re.IGNORECASE)
FUZZY_OFFERS = re.compile(b"(?!offers)<O><F><F><E><R><S>", re.IGNORECASE)
FUZZY_PHARMACY = re.compile(b"<interW2><postP2>(?!pharmacy)<P><H><A><R><M><A><C><Y>", re.IGNORECASE)
FUZZY_PHENT = re.compile(b"<interW1><postP2>(?!phentermine)<P><H><E><N><T><E><R><M><I><N><E>", re.IGNORECASE)
FUZZY_PRESCRIPT = re.compile(b"<interW2><postP2>(?!prescription)<P><R><E><S><C><R><I><P><T><I><O><N>", re.IGNORECASE)
FUZZY_PRICES = re.compile(b"<interW2><postP2>(?!price)<P><R><I><C><E><S>", re.IGNORECASE)
FUZZY_REFINANCE = re.compile(b"<interW2><postP2>(?!refinance)<R><E><F><I><N><A><N><C><E>", re.IGNORECASE)
FUZZY_REMOVE = re.compile(b"(?!remove)<R><E><M><O><V><E>", re.IGNORECASE)
FUZZY_ROLEX = re.compile(b"(?!rolex)<R><O><L><E><X>", re.IGNORECASE)
FUZZY_SOFTWARE = re.compile(b"(?!software)<S><O><F><T><W><A><R><E>", re.IGNORECASE)
FUZZY_THOUSANDS = re.compile(b"(?!thousands)<T><H><O><U><S><A><N><D><S>", re.IGNORECASE)
FUZZY_VLIUM = re.compile(b"<interW1><postP2>(?!valium|verifiquem|volturno|vollum)<V><A><L><I><U><M>", re.IGNORECASE)
FUZZY_VIOXX = re.compile(b"<interW1><postP2>(?!vioxx)<V><I><O><X><X>", re.IGNORECASE)
FUZZY_VPILL = re.compile(b"(?!viagra)<V><I><A><G><R><A>", re.IGNORECASE)
FUZZY_XPILL = re.compile(b"<interW3><postP2>(?!xanax)<X><A><N><A><X>", re.IGNORECASE)
UNWANTED_LANGUAGE_BODY = re.compile(b"eval:check_language()", re.IGNORECASE)
BODY_8BITS = re.compile(b"eval:check_body_8bits()", re.IGNORECASE)
URIBL_SBL = re.compile(b"eval:check_uridnsbl('URIBL_SBL')", re.IGNORECASE)
URIBL_DBL_SPAM = re.compile(b"eval:check_uridnsbl('URIBL_DBL_SPAM')", re.IGNORECASE)
URIBL_DBL_REDIR = re.compile(b"eval:check_uridnsbl('URIBL_DBL_REDIRECTOR')", re.IGNORECASE)
URIBL_DBL_ERROR = re.compile(b"eval:check_uridnsbl('URIBL_DBL_ERROR')", re.IGNORECASE)
URIBL_SC_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_SC_SURBL')", re.IGNORECASE)
URIBL_WS_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_WS_SURBL')", re.IGNORECASE)
URIBL_PH_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_PH_SURBL')", re.IGNORECASE)
URIBL_MW_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_MW_SURBL')", re.IGNORECASE)
URIBL_AB_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_AB_SURBL')", re.IGNORECASE)
URIBL_JP_SURBL = re.compile(b"eval:check_uridnsbl('URIBL_JP_SURBL')", re.IGNORECASE)
URIBL_BLACK = re.compile(b"eval:check_uridnsbl('URIBL_BLACK')", re.IGNORECASE)
URIBL_GREY = re.compile(b"eval:check_uridnsbl('URIBL_GREY')", re.IGNORECASE)
URIBL_RED = re.compile(b"eval:check_uridnsbl('URIBL_RED')", re.IGNORECASE)
URIBL_BLOCKED = re.compile(b"eval:check_uridnsbl('URIBL_BLOCKED')", re.IGNORECASE)
AXB_3LITTLE_PIGS = re.compile(b"\bwassentbythird-partyindependentmarketingagent\.", re.IGNORECASE)
AXB_BODYMAIL_SBL112884 = re.compile(b"\@yeah\.net\b", re.IGNORECASE)
BANKING_LAWS = re.compile(b"bankinglaws", re.IGNORECASE)
BASE64_LENGTH_78_79 = re.compile(b"eval:check_base64_length('78','79')", re.IGNORECASE)
BASE64_LENGTH_79_INF = re.compile(b"eval:check_base64_length('79')", re.IGNORECASE)
CN_B2B_SPAMMER = re.compile(b"\bWeare(?:(?:a)?(?:China|Taiwan)[-\s]based|(?:oneof(?:the)?best|(?:a)?leading)[^\.]{10,90}(?:in|from)(?:China|Taiwan))\b", re.IGNORECASE)
CURR_PRICE = re.compile(b"\bCurrentPrice:", re.IGNORECASE)
DEAR_BENEFICIARY = re.compile(b"\b(?:De[ae]r\s|At+(?:ention|n):?\s?)(?:\S+\s)?Ben[ei]ficiary\b", re.IGNORECASE)
DEAR_EMAIL_USER = re.compile(b"^\s?(?:Dear\s|Attention:?\s?)(?:E|Web)-?mail\s(?:account\s)?User\b", re.IGNORECASE)
DEAR_WINNER = re.compile(b"\bdear.{1,20}winner", re.IGNORECASE)
EMRCP = re.compile(b"\bExcessMaximumReturnCapitalProfit\b", re.IGNORECASE)
FRT_ADOBE2 = re.compile(b"<interW0><postP2>\b(?!adobe)<A><D><O><B><E>\b", re.IGNORECASE)
FRT_APPROV = re.compile(b"<intersP2><postP2>\b(?!approu?v)<A><P><P><R><O><V>", re.IGNORECASE)
FRT_BIGGERMEM1 = re.compile(b"<interSP2><postP2>(?:<B><IX><GX><GX><E><R>|<L><A><R><GX><E><R>).{1,8}(?:<P><E><N><IX><SX>|<B><R><E><A><SX><TX>|<M><E><M><B><E><R>)", re.IGNORECASE)
FRT_OFFER2 = re.compile(b"<interW0><postP2>\b(?!offer)<O><F><F><E><R>", re.IGNORECASE)
FRT_PENIS1 = re.compile(b"<interSP2><postP2>\b(?!pen\s?(?:ie?s|ny[']?s))<P><E><N><IX><SX>\b", re.IGNORECASE)
FRT_PRICE = re.compile(b"<interSP2><postP2>\b(?!price)<P><R><IX><C><E>\b", re.IGNORECASE)
FRT_ROLEX = re.compile(b"<interSP2><postP2>\b(?!rolex)<R><O><L><E><X>", re.IGNORECASE)
FUZZY_MERIDIA = re.compile(b"<interW3><postP2>\b(?!meridia)<M><E><R><I><D><I><A>\b", re.IGNORECASE)
HK_SCAM_N1 = re.compile(b"\b(?:widow|son|daughter|husband|wife|brother|sister)of(?:the)?(?:late|sacked|dead|passed)\b", re.IGNORECASE)
HK_SCAM_N13 = re.compile(b"\b(?:business|important|discreet)transaction\b", re.IGNORECASE)
HK_SCAM_N15 = re.compile(b"\b(?:account(?:overseas?|offshore)|(?:overseas?|offshore)account)\b", re.IGNORECASE)
HK_SCAM_N2 = re.compile(b"\bnextofkin\b", re.IGNORECASE)
HK_SCAM_N3 = re.compile(b"\bdirecttelephonenumbers?\b", re.IGNORECASE)
HK_SCAM_N8 = re.compile(b"\byourcompensation\b", re.IGNORECASE)
HK_SCAM_S15 = re.compile(b"(?:discoveredadormantaccount|canyoubemypartner)", re.IGNORECASE)
HK_SCAM_S25 = re.compile(b"\bbank(?:in|of)ghana", re.IGNORECASE)
HK_SCAM_S4 = re.compile(b"transfer(?:this|my|of)?funds?", re.IGNORECASE)
HK_SCAM_S7 = re.compile(b"(?:(?:investment|proposed|lucrative)(?:business|venture)|(?:business|venture)(?:enterprise|propos(?:al|ition)))", re.IGNORECASE)
HTTPS_HTTP_MISMATCH = re.compile(b"eval:check_https_http_mismatch('1','10')", re.IGNORECASE)
LONG_TERM_PRICE = re.compile(b"long\W+term\W+(target|projected)(\W+price)?", re.IGNORECASE)
LOOPHOLE_1 = re.compile(b"loop-?holeinthebanking", re.IGNORECASE)
SHORT_TERM_PRICE = re.compile(b"short\W+term\W+(target|projected)(\W+price)?", re.IGNORECASE)
TVD_ACT_193 = re.compile(b"\bactof(?:193|nineteenthirty)", re.IGNORECASE)
TVD_APPROVED = re.compile(b"you.{1,2}re.{0,20}approved", re.IGNORECASE)
TVD_DEAR_HOMEOWNER = re.compile(b"^dearhomeowner", re.IGNORECASE)
TVD_FUZZY_DEGREE = re.compile(b"<interW1><postP1>\b(?!degree)<D><E><G><R><E><E>\b", re.IGNORECASE)
TVD_FUZZY_FINANCE = re.compile(b"(?!finance)<F><I><N><A><N><C><E>", re.IGNORECASE)
TVD_FUZZY_FIXED_RATE = re.compile(b"<interW2><postP2>(?!fixedrate)<F><I><X><E><D>\s+<R><A><T><E>", re.IGNORECASE)
TVD_FUZZY_MICROCAP = re.compile(b"<interW2><postP2>(?!microcap)(?!micro-cap)<M><I><C><R><O>-?<C><A><P>", re.IGNORECASE)
TVD_FUZZY_PHARMACEUTICAL = re.compile(b"<interW2><postP2>(?!pharmaceutical)<P><H><A><R><M><A><C><E><U><T><I><C><A><L>", re.IGNORECASE)
TVD_FUZZY_SYMBOL = re.compile(b"<interW2><postP2>(?!symbol)<S><Y><M><B><O><L>", re.IGNORECASE)
TVD_INCREASE_SIZE = re.compile(b"\bsizeof.{1,20}(?:penis|dick|manhood)", re.IGNORECASE)
TVD_LINK_SAVE = re.compile(b"\blinktosave\b", re.IGNORECASE)
TVD_PH_REC = re.compile(b"\byour.{0,40}account.{0,40}record", re.IGNORECASE)
TVD_PH_SEC = re.compile(b"\byour.{0,40}account.{0,40}security", re.IGNORECASE)
TVD_QUAL_MEDS = re.compile(b"\bqualitymed(?:ication)?s\b", re.IGNORECASE)
TVD_SECTION = re.compile(b"\bSection(?:27A|21B)", re.IGNORECASE)
TVD_SILLY_URI_OBFU = re.compile(b"https?://[a-z0-9-]+\.[a-z0-9-]*\.?[^a-z0-9.:/\s\"'\@?\)>-]+[a-z0-9.-]*[a-z]{3}(?:\s|$)", re.IGNORECASE)
TVD_STOCK1 = re.compile(b"eval:check_stock_info('2')", re.IGNORECASE)
TVD_VISIT_PHARMA = re.compile(b"OnlinePh.rmacy", re.IGNORECASE)
T_FRT_ABSOLUT = re.compile(b"<interSP2><postP2>\b(?!absolutely)<A><B><SX><O><L><U><TX><E><L><Y>", re.IGNORECASE)
T_FRT_ADULT2 = re.compile(b"<interW0><postP2>\b(?!adult)<A><D><UX><L><TX>", re.IGNORECASE)
T_FRT_BEFORE = re.compile(b"<interSP2><postP2>\b(?!before)<B><E><F><O><R><E>\b", re.IGNORECASE)
T_FRT_BELOW2 = re.compile(b"<interW0><postP2>\b(?!below)<B><E><L><O><WX>\b", re.IGNORECASE)
T_FRT_CANSPAM = re.compile(b"<interSP2><postP2>\b(?!CAN<SP>SPAM)<C><A><N><SP><SX><P><A><M>", re.IGNORECASE)
T_FRT_CLICK = re.compile(b"<postP2>\b(?!click)<C><L><IX><C><K>\b", re.IGNORECASE)
T_FRT_COCK = re.compile(b"<interSP2><postP2>\b(?![cs]ock)<C><O><C><K>", re.IGNORECASE)
T_FRT_CONTACT = re.compile(b"<interSP2><postP2>\b(?!contr?act)<C><O><N><TX><A><C><TX>", re.IGNORECASE)
T_FRT_ERECTION = re.compile(b"<interSP2><postP2>(?!erection)<E><R><E><C><TX><IX><O><N>", re.IGNORECASE)
T_FRT_ESTABLISH = re.compile(b"<interSP2><postP2>\b(?!estabi?lish)<E><SX><TX><A><B><L><IX><SX><H>", re.IGNORECASE)
T_FRT_EXPERIENCE = re.compile(b"<interSP2><postP2>\b(?!exp[e\xe9\xc9]rience)<E><X><P><E><R><IX><E><N><C><E>\b", re.IGNORECASE)
T_FRT_FOLLOW1 = re.compile(b"<interSP2><postP2>\b(?!follow)<F><O><L><L><O><WX>", re.IGNORECASE)
T_FRT_FOLLOW2 = re.compile(b"<interW0><postP2>\b(?!follow)<F><O><L><L><O><WX>", re.IGNORECASE)
T_FRT_FREE = re.compile(b"<interSP2><postP2>\b(?!free)<F><R><E><E>\b", re.IGNORECASE)
T_FRT_FRIEND = re.compile(b"<interSP2><postP2>\b(?!friend)<F><R><IX><E><N><D>", re.IGNORECASE)
T_FRT_FUCK1 = re.compile(b"<interSP2><postP2>\b(?!fuck)<F><U><C><K>", re.IGNORECASE)
T_FRT_HEALTH = re.compile(b"<interSP2><postP2>\b(?!health)<H><E><A><L><TX><H>\b", re.IGNORECASE)
T_FRT_HOUR = re.compile(b"<interSP2><postP2>\b(?!hour)<H><O><U><R>\b", re.IGNORECASE)
T_FRT_INCOME = re.compile(b"<interSP2><postP2>\b(?!income)<IX><N><C><O><M><E>\b", re.IGNORECASE)
T_FRT_INTEREST = re.compile(b"<interSP2><postP2>\b(?!interest)<IX><N><TX><E><R><E><SX><TX>\b", re.IGNORECASE)
T_FRT_LITTLE = re.compile(b"<interSP2><postP2>\b(?!little)<L><IX><TX><TX><L><E>", re.IGNORECASE)
T_FRT_LOLITA1 = re.compile(b"<interSP2><postP2>\b(?!lolita)<L><O><L><IX><TX><A>", re.IGNORECASE)
T_FRT_OPPORTUN1 = re.compile(b"<interSP2><postP2>(?!opportun)<O><P><P><O><R><TX><U><N>", re.IGNORECASE)
T_FRT_PACKAGE = re.compile(b"<interSP2><postP2>\b(?!package)<P><A><C><K><A><GX><E>", re.IGNORECASE)
T_FRT_PAYMENT = re.compile(b"<interW0>\b(?!payment)<P><A><Y><M><E><N><TX>", re.IGNORECASE)
T_FRT_PHARMAC = re.compile(b"<interW0><postP2>(?!pharma[c\@])<P><H><A><R><M><A><C>", re.IGNORECASE)
T_FRT_POSSIBLE = re.compile(b"<interSP2><postP2>\b(?!possible)<P><O><SX><SX><IX><B><L><E>\b", re.IGNORECASE)
T_FRT_PROFILE1 = re.compile(b"<interSP2><postP2>\b(?!profile)<P><R><O><F><IX><L><E>", re.IGNORECASE)
T_FRT_PROFILE2 = re.compile(b"<interW0><postP2>\b(?!profile)<P><R><O><F><IX><L><E>", re.IGNORECASE)
T_FRT_PROFIT1 = re.compile(b"<interSP2><postP2>\b(?!profit)<P><R><O><F><IX><TX>", re.IGNORECASE)
T_FRT_PROFIT2 = re.compile(b"<interW0><postP2>\b(?!profit)<P><R><O><F><IX><TX>", re.IGNORECASE)
T_FRT_PUSSY = re.compile(b"<interSP2><postP2>\b(?!pussy)<P><U><SX><SX><Y>", re.IGNORECASE)
T_FRT_SLUT = re.compile(b"<interSP2><postP2>\b(?!slut)<SX><L><U><TX>", re.IGNORECASE)
T_FRT_STOCK1 = re.compile(b"<interSP2><postP2>\b(?!stock)<SX><TX><O><C><K>", re.IGNORECASE)
T_FRT_STOCK2 = re.compile(b"<interW0><postP2>\b(?!stor?ck)<SX><TX><O><C><K>", re.IGNORECASE)
T_FRT_VIRGIN1 = re.compile(b"<interSP2><postP2>(?!virgin)<V><IX><R><GX><IX><N><SX>?\b", re.IGNORECASE)
T_FUZZY_SPRM = re.compile(b"<interW1><postP2><S><P><U><R><M>", re.IGNORECASE)
T_KAM_HTML_FONT_INVALID = re.compile(b"eval:html_test('font_invalid_color')", re.IGNORECASE)
T_LFUZ_PWRMALE = re.compile(b"<interW1><postP2><P><O><W><E><R><M><A><L><E>", re.IGNORECASE)
T_TVD_FUZZY_SECTOR = re.compile(b"(?!sector)<S><E><C><T><O><R>", re.IGNORECASE)
T_TVD_FUZZY_SECURITIES = re.compile(b"<interW2><postP2>(?!securities)<S><E><C><U><R><I><T><I><E><S>", re.IGNORECASE)
T_TVD_MIME_EPI = re.compile(b"eval:check_msg_parse_flags('mime_epilogue_exists')", re.IGNORECASE)
T_TVD_MIME_NO_HEADERS = re.compile(b"eval:check_msg_parse_flags('missing_mime_headers')", re.IGNORECASE)
URIBL_RHS_DOB = re.compile(b"eval:check_uridnsbl('URIBL_RHS_DOB')", re.IGNORECASE)
URI_OBFU_WWW = re.compile(b"(?<!http://)\b_*w{2,3}(?!\.[-\w]+\.(?:com|net|org|biz|info))[^[:alnum:]]{1,3}(?:<D><O><T>+[^[:alnum:]]{1,3})?[[:alnum:]][-\w]{1,20}[[:alnum:]][^[:alnum:]]{1,3}(?:<D><O><T>+[^[:alnum:]]{1,3})?(?:c\s?o\s?m|n\s?e\s?t|o\s?r\s?g|b\s?i\s?z|i\s?n\s?f\s?o)_*\b", re.IGNORECASE)
__ACH_CANCELLED_01 = re.compile(b"\b(?:(?:ACH)|dividend)[-_](?:payment|transfer|transaction|was)[-_](?:(?:was|is)[-_])?(?:rejected|cancel+ed|declined|disabled|not[-_]accepted|(?:technical)?error)", re.IGNORECASE)
__ACH_CANCELLED_02 = re.compile(b"(?:rejected|cancel+ed|declined|your)[-_](?:(?:ACH)|direct[-_]deposit)[-_](?:payment|transfer|transaction|declin(?:ed|ing))", re.IGNORECASE)
__ACH_CANCELLED_03 = re.compile(b"\bwire[-_]?(?:payment|transfer|transaction)[-_](?:(?:was|is)[-_])?(?:rejected|cancel+ed|declined|disabled|not[-_]accepted|(?:technical)?error)", re.IGNORECASE)
__ACH_CANCELLED_04 = re.compile(b"\bregarding[-_]your[-_]direct[-_]deposit[-_]via[-_](?:ACH)", re.IGNORECASE)
__AFF_004470_NUMBER = re.compile(b"(?:\+|00|011)\W{0,3}44\W{0,3}0?\W{0,3}70", re.IGNORECASE)
__AFF_LOTTERY = re.compile(b"(?:lottery|winner)", re.IGNORECASE)
__AFR_UNION = re.compile(b"\bafrican\sunion\b", re.IGNORECASE)
__AGREED_RATIO = re.compile(b"\b(?:agreed|sharing)\s(?:ratios?|percent\w+)\b", re.IGNORECASE)
__AM_DYING = re.compile(b"\b(?:am\s(?:\S+\s)?dying|terminally\sill|cancer|en\sphase\sterminale|(?:become|is|devenu|maladie)\sincurable|que\sje\smeurs)\b", re.IGNORECASE)
__ATM_CARD = re.compile(b"\b(?:your|the|this|through|via|by\smeans\sof\|that\sa)[\s\(](?:\w{1,20}\s)?(?:atm|debit|(?:money[\s-]?gram\s)?fast\scash)(?:\smaster|swift|value?|cash)?[\s\)]card", re.IGNORECASE)
__ATTN_MAIL_USER = re.compile(b"\b(?:att(?:entio)?n|dear|caro)(?:web?(?:mail)?\s\S\s)?(?:web?|e-?)?mail(?:user|DOUSU(?:=E1|[\xe1]|[\xc3][\xa1])RIO)[:;,]", re.IGNORECASE)
__BACK_SCRATCH = re.compile(b"\bmutual+y?\s(?:benefi(?:t|cial)|interest)\b", re.IGNORECASE)
__BANK_DRAFT = re.compile(b"\bbank\sdraft", re.IGNORECASE)
__BARRISTER = re.compile(b"\b(?:barrister|solicitoratlaw|barr\.)", re.IGNORECASE)
__BENEFICIARY = re.compile(b"\bb(?:e|=E9|[\xe9]|[\xc3][\xa9])n(?:e|=E9|[\xe9]|[\xc3][\xa9])fi(?:c|sh)i?ai?r(?:y|ies|es?)", re.IGNORECASE)
__BENIN = re.compile(b"\bb(?:e|=E9|[\xe9]|[\xc3][\xa9])nin\b", re.IGNORECASE)
__BIGNUM_EMAILS = re.compile(b"\b(?:thousand|million|\d[,\d]{4,})\s(?:(?!and|or|your)\w+\s)?(?:e-?mail\saddresses|leads|names)\b", re.IGNORECASE)
__BODY_STARTS_WITH_FROM_LINE = re.compile(b"^From\S+\S\S\S\S\S\S....:..:..\S+\s+\S+\:", re.IGNORECASE)
__BODY_TEXT_LINE = re.compile(b"^\s*\S", re.IGNORECASE)
__BODY_XHTML = re.compile(b"<x-html>", re.IGNORECASE)
__BURKINA_FASO = re.compile(b"\bburkina\s?faso\b", re.IGNORECASE)
__CAN_HELP = re.compile(b"\bcanhelp\b", re.IGNORECASE)
__CASHPRZ = re.compile(b"cashprizeof", re.IGNORECASE)
__CHARITY = re.compile(b"\b(?:charit(?:y|[ai]ble)|orphans?|homeless|orphelins|sans\sabri)\b", re.IGNORECASE)
__CLEAN_MAILBOX = re.compile(b"\b(?:(?:e-?mail|mail\s?box|violation:|(?:CLICK))(?:quotasize|clean(?:-?up))|clean?upclick?here)\b", re.IGNORECASE)
__COMPENSATION = re.compile(b"\b(?:compensat(?:e|ion)|recompensed?|ausgleich)\b", re.IGNORECASE)
__CONTACT_ATTY = re.compile(b"\bcontact(?:er)?\s(?:my|(?:de\s)?mon)\s(?:barrister|attou?rney|lawyer|avocat|gestionnaire)\b", re.IGNORECASE)
__CONTACT_YOU = re.compile(b"\b(?:contact(?:ing)\syou|vous\scontacter?)\b", re.IGNORECASE)
__COURIER = re.compile(b"\bcourier\s(?:company|service)\b", re.IGNORECASE)
__DBLCLAIM = re.compile(b"avoiddoubleclaiming", re.IGNORECASE)
__DEAD_PARENT = re.compile(b"\b(?:my|meu)\s(?:(?:deceased|dead)\s(?:father|mother|husband)|(?:father|dad|mother|mom|husband|marido)(?:'?s)?\s(?:death|died|passed\saway|murder|was\s(?:killed|murdered|poisoned)|faleceu))", re.IGNORECASE)
__DEAL = re.compile(b"\b(?:(?:business|financial|this|the|mutual|die(?:se)?r?|cette|profitable)\s(?:deal|transa[ck]tion|proposal|off[er]{2}|venture|suggestion|partnership)|your\spartnership)", re.IGNORECASE)
__DECEASED = re.compile(b"\b(?:the|my|der|du|le|meu?)\s(?:deceased|late|verstorbenen|d(?:i|e|=E9|[\xe9]|[\xc3][\xa9])funto?|d(?:e|=E9|[\xe9]|[\xc3][\xa9])nt|falecido)\b", re.IGNORECASE)
__DESTROY_ME = re.compile(b"\b(?:destroy|hunt|quemar)\sm[eyi]\b", re.IGNORECASE)
__DIED_IN = re.compile(b"\bdied\sin\b", re.IGNORECASE)
__DIPLOMATIC = re.compile(b"\bdiplomatic\b", re.IGNORECASE)
__DLND_ATTACH = re.compile(b"\bdownload\sthe\sattach(?:ed|ment)\b", re.IGNORECASE)
__DORMANT_ACCT = re.compile(b"\b(?:(?:dormant|abandoned|left\s?over)\s(?:account|fund|transaction|sum|deposit)|fonds\sdorment)", re.IGNORECASE)
__DOS_BODY_FRI = re.compile(b"\bfri(?:day)?\b", re.IGNORECASE)
__DOS_BODY_MON = re.compile(b"\bmon(?:day)?\b", re.IGNORECASE)
__DOS_BODY_SAT = re.compile(b"\bsat(?:day)?\b", re.IGNORECASE)
__DOS_BODY_STOCK = re.compile(b"\bstock\b", re.IGNORECASE)
__DOS_BODY_SUN = re.compile(b"\bsun(?:day)?\b", re.IGNORECASE)
__DOS_BODY_THU = re.compile(b"\bthu(?:r(?:s(?:day)?)?)?\b", re.IGNORECASE)
__DOS_BODY_TICKER = re.compile(b"\b[A-Z]{4}\.(?:OB|PK)\b", re.IGNORECASE)
__DOS_BODY_TUE = re.compile(b"\btue(?:s(?:day)?)?\b", re.IGNORECASE)
__DOS_BODY_WED = re.compile(b"\bwed(?:nesday)?\b", re.IGNORECASE)
__DOS_COMING_TO_YOUR_PLACE = re.compile(b"I(?:am|might(?:be)?)c[a-z]?o[a-z]?m[a-z]?(?:i[a-z]?n[a-z]?g[a-z]{0,2}|edown)toy[!a-z]{2,4}r(?:city|place[a-z]{0,2}|co[a-z]?u[a-z]?n[a-z]?t[a-z]?ry)in(?:f[a-z]?e[a-z]?w|\d{1,2})(?:day|week)s", re.IGNORECASE)
__DOS_CORRESPOND_EMAIL = re.compile(b"correspondwithmeusingmyemail", re.IGNORECASE)
__DOS_DROP_ME_A_LINE = re.compile(b"Dropmealineat", re.IGNORECASE)
__DOS_EMAIL_DIRECTLY = re.compile(b"(?:Emailm[a-z]?e|address)direc(?:tl|lt)yat", re.IGNORECASE)
__DOS_FIN_ADVANTAGE = re.compile(b"\bfinancialadvantage", re.IGNORECASE)
__DOS_HI = re.compile(b"^Hi,$", re.IGNORECASE)
__DOS_I_AM_25 = re.compile(b"Ia.?m25", re.IGNORECASE)
__DOS_I_DRIVE_A = re.compile(b"Idrivea", re.IGNORECASE)
__DOS_LET_GO_JOB = re.compile(b"Iwas(?:letgo|fired|layedoff|dismissed)fromajobIh(?:el|a)dfor(?:2\dyears|\d{3}months)", re.IGNORECASE)
__DOS_LINK = re.compile(b"\blink\b", re.IGNORECASE)
__DOS_MEET_EACH_OTHER = re.compile(b"(?:meeteachother|[Mm]ay?bewecanmeet)", re.IGNORECASE)
__DOS_MY_OLD_JOB = re.compile(b"myoldjob", re.IGNORECASE)
__DOS_PERSONAL_EMAIL = re.compile(b"personalemailat", re.IGNORECASE)
__DOS_STEADY_COURSE = re.compile(b"\bsteady(?:andincreasing)?course\b", re.IGNORECASE)
__DOS_STRONG_CF = re.compile(b"\bstrongcashflow", re.IGNORECASE)
__DOS_TAKING_HOME = re.compile(b"Takinghome\d(?:digitlevel|figures)in\d{1,2}months", re.IGNORECASE)
__DOS_WRITE_ME_AT = re.compile(b"[Ww].?r.?i.?t.?emeat", re.IGNORECASE)
__EARLY_DEMISE = re.compile(b"\buntimely\sdeath\b", re.IGNORECASE)
__EX_CUSTOMER = re.compile(b"\b(?:(?:dead|deceased|late|verstorbenen|death\sof\sthe)\s(?:[ck]lient|customer|ac+ount|invest[eo]r|beneficiary|depositor|mr\.|kunde|engr?\.?)|titulaire\sdu\scompte\sest\sd(?:e|=E9|[\xe9]|[\xc3][\xa9])c(?:e|=E9|[\xe9]|[\xc3][\xa9])d(?:e|=E9|[\xe9]|[\xc3][\xa9])|invest[eo]r\sdied|(?:e|=E9|[\xe9]|[\xc3][\xa9])tranger\sd(?:e|=E9|[\xe9]|[\xc3][\xa9])c(?:e|=E9|[\xe9]|[\xc3][\xa9])d(?:e|=E9|[\xe9]|[\xc3][\xa9])|(?:[ck]lient|customer|ac+ount|invest[eo]r|beneficiary|mr\.|kunde|engr?\.?)\s(?:[a-z]{1,10}\s)?(?:dead|deceased|verstorbenen))", re.IGNORECASE)
__FBI_BODY_SHOUT_1 = re.compile(b"^FEDERALBUREAUOFINVESTIGATIONS?\b", re.IGNORECASE)
__FB_CONGRADS = re.compile(b"Congratulations", re.IGNORECASE)
__FB_COST = re.compile(b"\bcost\b", re.IGNORECASE)
__FB_LOTTERY = re.compile(b"lottery", re.IGNORECASE)
__FB_NATIONAL = re.compile(b"national", re.IGNORECASE)
__FB_NUM_PERCNT = re.compile(b"\d\s?\%", re.IGNORECASE)
__FB_S_PRICE = re.compile(b"pri{1,2}c[a-z]?e", re.IGNORECASE)
__FB_S_STOCK = re.compile(b"\bstock", re.IGNORECASE)
__FB_TOUR = re.compile(b"\btour", re.IGNORECASE)
__FEES = re.compile(b"\b(?:security|safe\w*|courier|registration|pay|paid|up-?front|processing|delivery|transfer|keeping)[\s\w]{0,15}\s(?:fee|charge)s?\b", re.IGNORECASE)
__FIFTY_FIFTY = re.compile(b"\b(?:50|fifty)(?:%?[/:]50%?|%|\spercent)", re.IGNORECASE)
__FOUND_YOU = re.compile(b"\b(?:I|we)\sfound\syour?\b", re.IGNORECASE)
__FRAUD = re.compile(b"\b(?:de)?fraud", re.IGNORECASE)
__FRAUD_IOV = re.compile(b"\b(?:norisks?|risky?[-]{0,3}free|freeofrisks?|100%safe|v\S{1,3}lligRisikofreiist)\b", re.IGNORECASE)
__FRAUD_PTX = re.compile(b"\b(?:ass?ass?inat(?:ed|ion)|murder(?:e?d)?|poison(?:e?d)?|kill(?:ed|ing|ers)\b[^.]{0,99}\b(?:warveterans|rebels?)|lestueurs)\b", re.IGNORECASE)
__FRAUD_XWW = re.compile(b"\b(?:honest(?:ly)?\sco(?:-?operat(?:e|ion)|llaborat(?:e|ion))|ehrliche\szusammenarbeit|sichere[kc]o+p[eo]ration|col+aboration\swith\sme)\b", re.IGNORECASE)
__FRT_GOLD = re.compile(b"<interSP2><postP2>\b(?!gold)<G><O><L><D>\b", re.IGNORECASE)
__FRT_SILVER = re.compile(b"<interSP2><postP2>\b(?!s[il][li]ver)<S><I><L><V><E><R>\b", re.IGNORECASE)
__F_LARGE_MONEY = re.compile(b"\d\d\d,\d\d\d", re.IGNORECASE)
__F_LARGE_MONEY_2 = re.compile(b"\d\d?\s?(?:thousand|(?:m|b|tr)illion)", re.IGNORECASE)
__GHANA = re.compile(b"\bghana\b", re.IGNORECASE)
__GIVE_MONEY = re.compile(b"\b(?:(?:give\syou\s(?:this\s)?(?:money|fund|inheritance))|(?:donated?\s(?:\w\+\s){0,3}(?:the\ssum\sof|(?:(?:the|this|some)\s(?:money|funds?|inheritance)|to\s)(?:you|(?:(?:the|a)\s)?church|charit(?:y|ies)|humanit\w+|needy|poor|orphan(?:age)?s?|philanthropists\?)))|devousdonnercetargent|fairedondelasomme|voudraisenfairedon|tegofunduszudodom(?:=F3|[\xf3])w(?:dziecka|wdowy))\b", re.IGNORECASE)
__HAS_ANY_EMAIL = re.compile(b"\w@\S+\.\w", re.IGNORECASE)
__HAS_WON_01 = re.compile(b"\bquehaganado\b", re.IGNORECASE)
__HK_LOTTO_1 = re.compile(b"\b(?:(?:inter)?national|foundation|mercato|univers|euro?million|e-?mail|euro-pw|bill?gates|swiss|prestige|cristal|am.ricaine|coca.?cola|fiduciary|department)?lot(?:eri[ej]|t(?:ery|o))", re.IGNORECASE)
__HK_LOTTO_2 = re.compile(b"\blot(?:eri[ej]|t(?:ery|o))?(?:(?:inter)?national|foundation|mercato|univers|euro?million|e-?mail|euro-pw|bill?gates|swiss|prestige|cristal|am.ricaine|coca.?cola|fiduciary|department)", re.IGNORECASE)
__HK_LOTTO_BALLOT = re.compile(b"\b(?:promotional|on.?line|computer|internet|e-?mail|fran.aise)(?:ballot|draw|sweepstake)", re.IGNORECASE)
__HK_LOTTO_JACKPOT = re.compile(b"\bmegajackpot\b", re.IGNORECASE)
__HK_LOTTO_STAATS = re.compile(b"\bstaatsloteri", re.IGNORECASE)
__HTML_COMMENT_10000 = re.compile(b"eval:html_text_match('comment','(?s)^(?=.{10000})')", re.IGNORECASE)
__HTML_COMMENT_20000 = re.compile(b"eval:html_text_match('comment','(?s)^(?=.{20000})')", re.IGNORECASE)
__HTML_COMMENT_30000 = re.compile(b"eval:html_text_match('comment','(?s)^(?=.{30000})')", re.IGNORECASE)
__HTML_COMMENT_50000 = re.compile(b"eval:html_text_match('comment','(?s)^(?=(?:.{25000}){2})')", re.IGNORECASE)
__HUSH_HUSH = re.compile(b"\b(?:confiden[tc]i[ae]l(?:\b|ity\b|it(?:=E9|[\xe9]|[\xc3][\xa9]))|private\b|secr[e\xe8](?:te?|cy)\b|sensitive\b|concealed\b|obscured?\b|discre(?:et|tion)\b|very\sdiscrete|top\ssecret|vertraulich(?:en)?\b|geheim\b|priv(?:e|=E9|[\xe9]|[\xc3][\xa9]))", re.IGNORECASE)
__INHERIT_PMT = re.compile(b"\binheritance\spayment\s", re.IGNORECASE)
__INTL_BANK = re.compile(b"\b(?:international\s(?:\w+\s)?bank|banque\sinternationale)\b", re.IGNORECASE)
__INVEST_COUNTRY = re.compile(b"\binvest\sin\syour?\scountry\b", re.IGNORECASE)
__INVEST_MONEY = re.compile(b"\binvest(?:ir)?\s(?:this|ces|d[ae]s|surce|deces)\s(?:money|f[ou]nds?)\b", re.IGNORECASE)
__IS_LEGAL = re.compile(b"\b(?:(?:(this|esta)\s(?:deal|offer|transac[tc]i(?:o|[\xc3][\xb3])n|proposal|exchange|arrangement|work)|it)?\s[ie]s\s(?:(?:guaranteed|completely|absolutely|perfectly|100%|very|fully)\s)?(?:legal|hitch-free|seguro|legitimate)|legitimate\sarrangement|toute?\sl(?:e|=E9|[\xe9]|[\xc3][\xa9])gale)\b", re.IGNORECASE)
__IVORY_COAST = re.compile(b"\b(?:Cote\s?D.Ivoire|Ivory\s?Coast|Costa\sde\sMarfil)\b", re.IGNORECASE)
__I_INHERIT = re.compile(b"\b(?:I|eu)\s[a-z\s]{0,30}(?:inherited|herdei)\b", re.IGNORECASE)
__I_WILL_YOU = re.compile(b"\bwill(?:ed)?\s(?:[a-z\s]{0,20}(?:fortune|money|\$[\d,]+[a-z]{0,9})\s)?to\syou\b", re.IGNORECASE)
__KAM_LOTTO2 = re.compile(b"((ticket|serial|lucky)number|secretpin?code|batchnumber|referencenumber|promotiondate)", re.IGNORECASE)
__LOCK_MAILBOX = re.compile(b"\b(?:(?:deactivate|lock|loseac+essto|los[se](?:of)?(?:important)?(?:information|mail|messages)in)(?:your)?(?:mail\s?box|(?:web?|e-?)mail)|your(?:mail\s?box|(?:(?:web?|e-?)mail)(?:account)?)(?:(?:will|may)be(?:come)?)?(?:in-?a(?:ctive|cess[ia]ble)|locked|disabled|deleted|removed)\b|dittkontovara\"?deaktiverad\"?|begr(?:=E4|\xe4|[\xc3][\xa4])nsadtillg(?:=E5|[\xe5]|[\xc3][\xa5])ngtilldinbrevl(?:=E5|[\xe5]|[\xc3][\xa5])da|contas?de(?:web?|e-?)mail(?:ser(?:=E1|[\xe1]|[\xc3][\xa1])(?:desativado|exclu(?:=ED|[\xed]|[\xc3][\xad])do)|(?:=E9|[\xe9]|[\xc3][\xa9])exclu(?:=ED|[\xed]|[\xc3][\xad])do)|destruirasuacaixade(?:correio|entrada)|tw(?:=F3|[\xf3])jkontozostaloograniczone|straciswojee-?mailnasta[\xc5][\x82]e|kontozostanieautomatyczniewy[\xc5][\x82][\xc4][\x85]czona)", re.IGNORECASE)
__LOTTO_ADMITS_1 = re.compile(b"\b(?:on-?line|e-?mail|ballot|(?:inter)?national|state|(?:UK|euro)[-]?(?:mil+ions?|PW)|Canada|Microsoft|MSN|internet|mega|jackpot+|RoyalHeritage|foundation|cash\sgrant|mercato|univers|staatsloterij|bill\s?gates|Olympics?|swiss|this|est[ea]|internationauxdegagnantsde)(?:\s(?!lot|swe|prom)\w{1,20}){0,3}\s?(?:lot(?:to|t+ery|eri[ea])|sweepstakes?|promo(?:tion|cao|cion)?|jackpot+)\b", re.IGNORECASE)
__LOTTO_ADMITS_2 = re.compile(b"\b(?:free)?(?:lot(?:to|tery|erie)|sweepstakes)\s(?:(?:inter)?na[tz]ional|department|bureau|group|award|microsoft)", re.IGNORECASE)
__LOTTO_AGENT_01 = re.compile(b"\b(?:(?:(?:the|y?our)(?:\s\w{1,20})?|contact|accredited|listed)\sclaim(?:s|ing)?(?:\sprocessing)?|fiducia\w+|reimbursement|(?:prize|international|intl|foreign|win+ing)(?:[\s,.]+(?:rem+it+ance|settlement|payment|payout|award|transfer))+|payment|payout|immunity|(?<!memory\s)grants?)\s?(?:agent|manager|officer|secretary|director|mgr\b)", re.IGNORECASE)
__LOTTO_AGENT_02 = re.compile(b"\blot+ery[^\.]{1,40}ticketagent", re.IGNORECASE)
__LOTTO_DEPT = re.compile(b"\b(?:claim(?:s|ing)?(?:\sprocessing)?|fiducia\w+|reimbursement|(?:international|foreign|win+ing)(?:\s(?:rem+it+ance|settlement|payment|award))+|payment|award|compensation|lot+ery)(?:\s\w+)?\s?(?:department|dept|unit|group|committee|bureau)", re.IGNORECASE)
__LOTTO_RELATED = re.compile(b"\b(?:lot+(?:o|ery)|sweepstakes)\s(?:prize|draw(?:s|ing)?|(?:ge)?win(?:n?er|n?ing)?|jackpot+|award|fund|com+it+e+|com+is+ion|guild|promotion|promocao|program|day|online|company|(?:in)?corporat|agent|co[-,]?ordinator|team)", re.IGNORECASE)
__LOTTO_VERIFY = re.compile(b"\bpromo\sverification", re.IGNORECASE)
__LOTTO_WINNINGS = re.compile(b"\b(?:claim|process(?:ing)?|transfert?(?:\s\w+)?|redeem|payment|virement|zahlung|reivindicar|demandar|remise)\s(?:(?:[a-z]{1,5}\s)?(?:your|of|the|this|de|ihrer|seu|tu)\s)+(?:win+ings?|money|(?:cash\s)?prize|award|f[ou]nds?|grant|gewinne|premio|gain)\b", re.IGNORECASE)
__LOTTO_WIN_01 = re.compile(b"\bwin+ing\s(?:prize|number|notification|draw|check|cheque|details|information|payment)", re.IGNORECASE)
__LUCKY_WINNER = re.compile(b"\b(?:lucky|gl.cklich(?:en)?|afortunados)\s(?:(?:ge)?win+ers?|ganador(?:es)?|individuals?)\b", re.IGNORECASE)
__LUCRATIVE = re.compile(b"\b(?:lucrative|profitable|tr[\xe8]s\ssalutaire)\b", re.IGNORECASE)
__MAILBOX_FULL = re.compile(b"\b(?:you(?:r(?:mail\s?box|(?:e-?|web?)mail))?(?:is(?:almost)?full|(?:quota)?ha(?:s|ve)(?:reached|exceeded|passed)(?:the|your|it'?s?)(?:size|storage|set|(?:e-?|web?)mail|quota|folder|mail?box)[/\s](?:limit|quota))|overyourmail\s?box(?:size)?(?:limit|quota)|maximummail\s?box(?:size)?(?:limit|quota)exceeded|sua(?:conta|caixa)de(?:(?:e-?|web?)mail|correio)(?:excedeu(?:sua|o)limite|est(?:=E1|[\xe1]|[\xc3][\xa1])quasecheio))\b", re.IGNORECASE)
__MAILBOX_FULL_SE = re.compile(b"(?:\b=F6|[\xf6]|[\xc3][\xb6])verskriditgr(?:=E4|[\xe4]|[\xc3][\xa4])nsenf(?:=F6|[\xf6]|[\xc3][\xb6])rdinpostl(?:=E5|[\xe5]|[\xc3][\xa5])da\b", re.IGNORECASE)
__MAIL_ACCT_ACCESS1 = re.compile(b"\b(?:your(?:web?|e-?)?mail(?:account|log-?in)(?:has)?beenaccessed|r(?:=F3|[\xf3])znekomputeryzalogowaniusie)\b", re.IGNORECASE)
__MAIL_ACCT_ACCESS2 = re.compile(b"\blo+seac+es+toyour(?:web|e-?)?mail(?:account|log-?in|box|address)\b", re.IGNORECASE)
__MILLIONS = re.compile(b"\bmillions\sof\s(?:dollar|euro|pound)", re.IGNORECASE)
__MOVE_MONEY = re.compile(b"\b(?:(?:receive|re-?profile|transfer(?:ring|ir|t)?|release|repatriat(?:e|ion)|rapatrier|secure|r(?:e|=E9|[\xe9]|[\xc3][\xa9])clamation|possession|virer|dona(?:te|r)|depositante|dep[\xc3][\xb3]sito)\s(?:th(?:e(?:se)?|is)|d[ae]s|surce|dece[st]|cet|est[eao]s?|del?)|re-?profiling|receive|re-?locat(?:e|ing)(?:\s\w{1,15})?)\s(?:of\s|your\s|the\s){0,2}(?:sums?\sof\s|inheritance\s)?(?:proceeds|funds?|money|balance|account|g[eo]ld|compte|fond[so]{1,2}|dinero|argent)\b", re.IGNORECASE)
__MY_FORTUNE = re.compile(b"\b(?:my|his|her)\s(?:fortune|heritage)\b", re.IGNORECASE)
__NEXT_OF_KIN = re.compile(b"\bnext[-\s]of[-\s]kin\b", re.IGNORECASE)
__NIGERIA = re.compile(b"\bnigeria\b", re.IGNORECASE)
__NOT_DEAD_YET = re.compile(b"\b(?:will\sinherit|que\sherede)\b", re.IGNORECASE)
__NOT_SCAM = re.compile(b"\b(?:not\sa\sscam|(?:not|never)\sscam\syou)\b", re.IGNORECASE)
__OUR_BEHALF = re.compile(b"\b(?:on\s(?:my|our)\sbehalf|of\sbehalf\sof)\b", re.IGNORECASE)
__PAY_YOU = re.compile(b"\bpay\syou\b", re.IGNORECASE)
__PLS_REVIEW = re.compile(b"\b(?:please|kindly)\s(?:(?:re)?view|see)(?:\s\w+)?\sattach(?:ed|ment)\b", re.IGNORECASE)
__RANDOM_PICK = re.compile(b"\b(?:random(?:ly)?\s(?:\w+\s)?(?:select(?:ion|ed)|pick(?:ed)?|computer)|(?:select|pick)ed\s(?:at\s)?random(?:ly)?|(?:esco(?:g|lh)idos|seleccion)(?:aleatoria(?:mente)?|alazar))\b", re.IGNORECASE)
__SCAM = re.compile(b"\bscam(?:m?e[dr])?s?\b", re.IGNORECASE)
__SHARE_IT = re.compile(b"\b(?:(?:share|allocate|teilen|parteger(?:ez|ons)?|partage)\s(?:th(?:e|is)|das|les?|des)\s(?:proceeds|funds?|money|balance|account|geld|compte|fonds)|partager(?:ez|ons)?(?:avec(?:vous|moi)|ratio|suivantunpourcentage))\b", re.IGNORECASE)
__STYLE_TAG_IN_BODY = re.compile(b"<style(?:[^>]{0,30})?>", re.IGNORECASE)
__SUBSCRIPTION_INFO = re.compile(b"\b(?:e?newsletters?|(?:un)?(?:subscrib|register)|you(?:r|are)subscri(?:b|ption)|opt(?:.|ing)?out\b|furtherinfo|youdo?n[o']tw(?:ish|ant)|remov\w{1,3}.{1,9}\blists?\b|toyourwhite.?list)", re.IGNORECASE)
__SUM_OF_FUND = re.compile(b"\b(?:sum|release|freigabe)\s(?:of|der)\s(?:amount|fund|investment|mittel)\b", re.IGNORECASE)
__SURVEY = re.compile(b"\bsurvey\b", re.IGNORECASE)
__SURVIVORS = re.compile(b"\b(?:widow|son|daughter|husband|wife|brother|sister|attorney|vi(?:=FA|[\xfa]|[\xc3][\xba])va|esposa|veuve)\s(?:of|to|do|de)\s(?:the\s)?(?:late|falecido|finales|feu|d(?:e|=E9|[\xe9]|[\xc3][\xa9])funt|mr\.?)\s\w+\b", re.IGNORECASE)
__SYSADMIN = re.compile(b"\b(?:help?[-]?desk|(?:(?:web?)?mail?|sys(?:tem)?)admin(?:istrator)|local[-]host|(?:support|upgrade|management)(?:team|center)|messagefromadministrator|universitymailservercopyright|suportet(?:=E9|[\xe9]|[\xc3][\xa9])cnico|administradordosistema)\b", re.IGNORECASE)
__THEY_INHERIT = re.compile(b"\b(?:inherit\sth(?:e|is)\smoney|herede\sest[ea]\sdinero)\b", re.IGNORECASE)
__TO_YOUR_ACCT = re.compile(b"\b(?:f[uo]nds|money|f[uo]ndo|dinheiro|bank)\s(?:\w{1,10}\s){0,4}(?:transfer(?:red)?|transferido|sont)\s(?:to|para|en)\s(?:your|sua|votre)\s(?:account|conta|pos+es+ion)", re.IGNORECASE)
__TRAVEL_AGENT = re.compile(b"\btravel\sagen(?:t|cy)\b", re.IGNORECASE)
__TRAVEL_BUSINESS = re.compile(b"\bbusiness\stravel\b", re.IGNORECASE)
__TRAVEL_PROFILE = re.compile(b"\btravel+er\sprofile\b", re.IGNORECASE)
__TRAVEL_RESERV = re.compile(b"\b(?:reservation\s(?:confirmed|number)|travel\sreservations?)\b", re.IGNORECASE)
__TRTMT_DEFILED = re.compile(b"\bdefiled\sall\s(?:forms\sof\s)?(?:medical\s)?treatments?\b", re.IGNORECASE)
__TRUNK_BOX = re.compile(b"\b(?:(?:trunk|metallic|proof|security|consignment)\sbox(?:es)?|sealed\ssafe|unemallettem(?:e|=E9|[\xe9]|[\xc3][\xa9])tallique)\b", re.IGNORECASE)
__TRUSTED_CHECK = re.compile(b"\b(?:cashier'?s?|certified)\sche(?:ck|que)", re.IGNORECASE)
__TVD_PH_BODY_01 = re.compile(b"\baccount.{0,20}placed?[io]nrestrictedstatus", re.IGNORECASE)
__TVD_PH_BODY_02 = re.compile(b"\brecords(?:[a-z_,-]+)+?(?:feature|(?:a|re)ward)", re.IGNORECASE)
__TVD_PH_BODY_03 = re.compile(b"\byou(?:'ve|have)been(?:[a-z_,-]+)+?payment", re.IGNORECASE)
__TVD_PH_BODY_04 = re.compile(b"\bfunds?(?!transferfrom)(?!from)(?!in)(?!via)(?:[a-z_,-]+)+?toyour(?:[a-z_,-]+)*?account", re.IGNORECASE)
__TVD_PH_BODY_05 = re.compile(b"\bthisis(?:[a-z_,-]+)+?protect(?:[a-z_,-]+)+?your", re.IGNORECASE)
__TVD_PH_BODY_06 = re.compile(b"Dear[a-z]+bank(?:member|customer)", re.IGNORECASE)
__TVD_PH_BODY_07 = re.compile(b"\bguaranteethesafetyofyour(?:[a-z_,-]+)*?account", re.IGNORECASE)
__TVD_PH_BODY_08 = re.compile(b"\bmultiplepasswordfailures", re.IGNORECASE)
__TVD_PH_BODY_ACCOUNTS_POST = re.compile(b"\b(?:(?:[dr]e-?)?activat[a-z]*|(?:re-?)?validate|secure|restore|confirm|update|suspend)(?!your)(?:[a-z_,-]+)+?accounts?\b", re.IGNORECASE)
__TVD_PH_BODY_ACCOUNTS_PRE = re.compile(b"\baccounts?(?:[a-z_,-]+)+?(?:record[a-z]*|suspen[a-z]+|notif(?:y|ication)|updated|verifications?|credited)\b", re.IGNORECASE)
__UN = re.compile(b"\bunited\snations?\b", re.IGNORECASE)
__UNSUB_EMAIL = re.compile(b"\b(?:(?:un)?subscri(?:ber?|ptions?)|abuses?|opt(?:ing)?.?out)\b[-a-z_0-9.+=]{0,60}\@[a-z0-9][-a-z_0-9.]{4,20}(?:[^a-z_0-9.-]|$)", re.IGNORECASE)
__UPGR_MAILBOX = re.compile(b"\b(?:up(?:g[ra]+d(?:e|ing)|date)(?:[hw]as\s(?:[a-z]+\s){1,5})?(?:o[nf])?(?:your)?(?:mail\s?box|(?:web?|e-?)mail)|(?:web?|e-?)mailUpgradecuenta|atualiz(?:e|ar)(?:a|sua)caixadecorreio|click\S{0,10}(?:here(?:[:\.\s]{0,5}\S{0,10}http\S{10,80})?|below)(?:link)?to(?:(?:complete|finish|increase))?(?:(?:the|this|your)\s)?(?:up(?:date|grade)|(?:web?|e-?)?mail(?:\s?box)?(?:size|quota|limit))|utrzymaniaaktywnegokonta)\b", re.IGNORECASE)
__VALIDATE_MAILBOX = re.compile(b"\b(?:(?:re-?)?(?:valida(?:te|r)|confirm|set)(?:\S?(?:increase|raise))?(?:your|(?:a)?sua)(?:mail\s?box|(?:e-?)?mailquota|caixa)|confirmar(?:que)?asuaconta(?:dee-?mail|aindaest(?:=E1|[\xe1]|[\xc3][\xa1])ativa)|wprowadzdanekontaponizej|utrzymaniaaktywnegokontae-?mail|weryfikacjikonta)\b", re.IGNORECASE)
__VALIDATE_MBOX_SE = re.compile(b"(?:\b=E5|[\xe5]|[\xc3][\xa5])terst(?:=E4|\xe4|[\xc3][\xa4])lladittkonto\b", re.IGNORECASE)
__V_ACCOLADES = re.compile(b"\baccolades?\b", re.IGNORECASE)
__V_ACHIEVEMENT = re.compile(b"\bbenchmarkofachievement\b", re.IGNORECASE)
__V_BESTOFAWARD = re.compile(b"\bBestof\w+Award", re.IGNORECASE)
__V_BIOGRAPHY = re.compile(b"\b(?:biography|biographies|biographical)\b", re.IGNORECASE)
__V_CBNVANITY = re.compile(b"\bContinentalBroadcastingNetwork\b", re.IGNORECASE)
__V_DISTINGUISHED = re.compile(b"\bdistinguished\b", re.IGNORECASE)
__V_DPHPVANITY = re.compile(b"\bDistinguishedProfessionalsHardcoverPublication\b", re.IGNORECASE)
__V_EXCELLENCE = re.compile(b"\b(?:demonstrated|commitmentto)excellence\b", re.IGNORECASE)
__V_EXECS_PROS = re.compile(b"\bexecutives?(?:and|&)professionals?\b", re.IGNORECASE)
__V_HONOR_SOCIETY = re.compile(b"\bHonorSociety\b", re.IGNORECASE)
__V_INFORM_YOU = re.compile(b"\b(?:pleased?|pleasure)toinformyou\b", re.IGNORECASE)
__V_INNERCIRCLE = re.compile(b"\bInnerCircle\b", re.IGNORECASE)
__V_NOMINATION = re.compile(b"\b(?:nominated|nomination|potentialcandidate)\b", re.IGNORECASE)
__V_NO_COST = re.compile(b"\b(?:nocosts?|cost-?free|freeofcosts?|nofees?|neithercostnorobligation)\b", re.IGNORECASE)
__V_PRINCETONPRE = re.compile(b"\bPrincetonPremier", re.IGNORECASE)
__V_PUB_DEADLINE = re.compile(b"\bpublicationdeadlines?\b", re.IGNORECASE)
__V_RECOGNITION = re.compile(b"\brecognition\b", re.IGNORECASE)
__V_REGISTRY = re.compile(b"\bregistry\b", re.IGNORECASE)
__V_SBCAVANITY = re.compile(b"\bSmallBusinessCommerceAssociation", re.IGNORECASE)
__V_SHMUCK = re.compile(b"\b(?:accomplished|distinguished|exceptional|talented|calibreof)+(?:professionals?|individuals?)\b", re.IGNORECASE)
__V_USCAVANITY = re.compile(b"\bUSCommerceAssociation", re.IGNORECASE)
__V_WHOSWHO = re.compile(b"\bWho.sWho\b", re.IGNORECASE)
__WEBMAIL_ACCT = re.compile(b"\byourweb?mailaccount", re.IGNORECASE)
__WIDOW = re.compile(b"\b(?:widow(?:e[rd])'?s?|veuve)\b", re.IGNORECASE)
__WILL_LEGAL = re.compile(b"\b(?:codicil|last\stestament|probate|executor|intestate|bequest|mandamus)\b", re.IGNORECASE)
__WIRE_XFR = re.compile(b"\b(?:wire|telegraph(?:ic)?|bank)\s?transfer", re.IGNORECASE)
__YOUR_BANK = re.compile(b"\byour?\s(?:full\s)?bank(?:ing)?\sinformations?\b", re.IGNORECASE)
__YOUR_FUND = re.compile(b"\b(?:your|ihr)\s(?:unpaid\s|win+ing\s|ap+roved\s|foreign\s|overdue\s|outstanding\s|contract\s|inheritance\s|nicht\sausbezahlten\s){0,3}(?:fund|payment|geld)\b", re.IGNORECASE)
__YOUR_PERM = re.compile(b"\byour\spermission\b", re.IGNORECASE)
__YOUR_PROFIT = re.compile(b"\byour?\sprofit", re.IGNORECASE)
__YOU_ASSIST = re.compile(b"\b(?:your\sas+istan(?:ce|t)|votre\s(?:as+istance|aide))\b", re.IGNORECASE)
__YOU_HAVE_WON = re.compile(b"you(?:\w+)?won", re.IGNORECASE)
__YOU_INHERIT = re.compile(b"\byour\s[a-z\s]{0,30}inherit+ance\b", re.IGNORECASE)
__YOU_WON_01 = re.compile(b"\byou(?:r|'re|'ve|'ll|\shave|\sdid)?\s(?:e-?mail\s)?(?:\w+\s){0,2}(?:a\s)?w[io]n+(?:er|ing)?(?!'t)\b", re.IGNORECASE)
__YOU_WON_02 = re.compile(b"\bw[io]n\s(?:(?:for|by)\s)?your?\b", re.IGNORECASE)
__YOU_WON_03 = re.compile(b"\b(?:your?|win+ing|win+ers?|beneficiaries|participants?|individuals?|address(?:es)?|accounts?|emails?)(?:\s[-a-z\s]{4,40})?\s(?:w(?:ere|as)|ha(?:ve|s)be(?:en)?)\s(?:automatically\s)?(?:(?:randomly|raffly)\s(?:selected|cho+sen|cho+sing|picked)|(?:selected|cho+sen|cho+sing|picked)\s(?:[a-z\s]{2,40}?\srandom(?:ly)?|online|lottery|computer\s(?:ballot|wahlgang))|(?:selected|cho+sen|cho+sing|picked)(?:\sas?|\sthe){0,3}\swin+er)", re.IGNORECASE)
__YOU_WON_04 = re.compile(b"\bqu[ei]\s?(?:vous(?:[\xc3][\xaa]|=C3=AA|[\xea]|e)tes\s?gagnant|en\scons(?:e|=E9|[\xe9]|[\xc3][\xa9])quence\sgagne)\b", re.IGNORECASE)
__YOU_WON_05 = re.compile(b"\bIwon\b", re.IGNORECASE)
__hk_bigmoney = re.compile(b"(?:EURO?|USD?|GBP|CFA|\&\#163;|[\xa3\xa4]|\$|sumof).{0,4}(?:[0-9]{3}[^0-9a-z]?[0-9]{3}|[0-9.,]{1,4}(?:M\b|(?:de)?Mil))", re.IGNORECASE)


allRegexes = __FRAUD_DBI, __FRAUD_KJV, __FRAUD_IRJ, __FRAUD_NEB, __FRAUD_XJR, __FRAUD_DPR, __FRAUD_PTS, __FRAUD_BEP, __FRAUD_TDP, __FRAUD_GAN, __FRAUD_IRT, __FRAUD_AON, __FRAUD_WNY, __FRAUD_IPK, __FRAUD_QXX, __FRAUD_IOU, __FRAUD_EZY, __FRAUD_MLY, __FRAUD_ZFJ, __FRAUD_KDT, __FRAUD_ULK, __FRAUD_BGP, __FRAUD_FBI, __FRAUD_JBU, __FRAUD_YWW, __FRAUD_JYG, __FRAUD_XVW, __FRAUD_UUY, __FRAUD_SNT, __FRAUD_LTX, __FRAUD_JNB, __FRAUD_QFY, __FRAUD_WDR, __FRAUD_WFC, __FRAUD_AUM, __FRAUD_MCQ, __FRAUD_ETX, __FRAUD_PVN, __FRAUD_FVU, __FRAUD_CKF, __FRAUD_FCW, __FRAUD_MQO, __FRAUD_TCC, __FRAUD_GBW, __FRAUD_NRG, __FRAUD_RLX, __FRAUD_AXF, __FRAUD_THJ, __FRAUD_YQV, __FRAUD_YJA, __FRAUD_YPO, __FRAUD_UOQ, GTUBE, TRACKER_ID, WEIRD_QUOTING, EMAIL_ROT13, __LONGWORDS_A, __LONGWORDS_B, __LONGWORDS_C, MPART_ALT_DIFF, MPART_ALT_DIFF_COUNT, BLANK_LINES_80_90, __TVD_SPACE_RATIO, MULTIPART_ALT_NON_TEXT, CHARSET_FARAWAY, MISSING_MIME_HB_SEP, MIME_HTML_MOSTLY, MIME_HTML_ONLY, MIME_BAD_ISO_CHARSET, HTTPS_IP_MISMATCH, URI_TRUNCATED, DRUG_DOSAGE, DRUG_ED_CAPS, DRUG_ED_SILD, DRUG_ED_GENERIC, DRUG_ED_ONLINE, ONLINE_PHARMACY, NO_PRESCRIPTION, VIA_GAP_GRA, __DRUGS_ERECTILE_V, __DRUGS_ERECTILE_C, __DRUGS_ERECTILE_L, __DRUGS_ERECTILE1, __DRUGS_ERECTILE2, __DRUGS_ERECTILE3, __DRUGS_ERECTILE4, __DRUGS_ERECTILE5, __DRUGS_ERECTILE6, __DRUGS_ERECTILE8, __DRUGS_ERECTILE11, __DRUGS_DIET_PHEN, __DRUGS_DIET1, __DRUGS_DIET2, __DRUGS_DIET3, __DRUGS_DIET4, __DRUGS_DIET5, __DRUGS_DIET6, __DRUGS_DIET7, __DRUGS_DIET8, __DRUGS_DIET9, __DRUGS_DIET10, __DRUGS_PAIN_VICO, __DRUGS_PAIN_VIOXX, __DRUGS_PAIN_FIO, __DRUGS_PAIN1, __DRUGS_PAIN2, __DRUGS_PAIN3, __DRUGS_PAIN4, __DRUGS_PAIN5, __DRUGS_PAIN6, __DRUGS_PAIN7, __DRUGS_PAIN8, __DRUGS_PAIN9, __DRUGS_PAIN10, __DRUGS_PAIN11, __DRUGS_PAIN12, __DRUGS_PAIN13, __DRUGS_PAIN14, __DRUGS_SLEEP1, __DRUGS_SLEEP2, __DRUGS_SLEEP3, __DRUGS_SLEEP4, __DRUGS_MUSCLE1, __DRUGS_MUSCLE2, __DRUGS_MUSCLE3, __DRUGS_MUSCLE4, __DRUGS_MUSCLE5, __DRUGS_ANXIETY_XAN, __DRUGS_ANXIETY_VAL, __DRUGS_ANXIETY1, __DRUGS_ANXIETY2, __DRUGS_ANXIETY3, __DRUGS_ANXIETY4, __DRUGS_ANXIETY5, __DRUGS_ANXIETY6, __DRUGS_ANXIETY7, __DRUGS_ANXIETY8, __DRUGS_ANXIETY9, DRUGS_SMEAR1, __freemail_safe_fwd, __JAPANESE_UCE_BODY, __HIGHBITS, HTML_MESSAGE, HTML_COMMENT_SHORT, HTML_COMMENT_SAVED_URL, HTML_EMBEDS, HTML_EXTRA_CLOSE, HTML_FONT_SIZE_LARGE, HTML_FONT_SIZE_HUGE, HTML_FONT_LOW_CONTRAST, HTML_FONT_FACE_BAD, HTML_FORMACTION_MAILTO, HTML_IMAGE_ONLY_04, HTML_IMAGE_ONLY_08, HTML_IMAGE_ONLY_12, HTML_IMAGE_ONLY_16, HTML_IMAGE_ONLY_20, HTML_IMAGE_ONLY_24, HTML_IMAGE_ONLY_28, HTML_IMAGE_ONLY_32, HTML_IMAGE_RATIO_02, HTML_IMAGE_RATIO_04, HTML_IMAGE_RATIO_06, HTML_IMAGE_RATIO_08, HTML_OBFUSCATE_05_10, HTML_OBFUSCATE_10_20, HTML_OBFUSCATE_20_30, HTML_OBFUSCATE_30_40, HTML_OBFUSCATE_50_60, HTML_OBFUSCATE_70_80, HTML_OBFUSCATE_90_100, HTML_TAG_BALANCE_BODY, HTML_TAG_BALANCE_HEAD, HTML_TAG_EXIST_BGSOUND, HTML_BADTAG_40_50, HTML_BADTAG_50_60, HTML_BADTAG_60_70, HTML_BADTAG_90_100, HTML_NONELEMENT_30_40, HTML_NONELEMENT_40_50, HTML_NONELEMENT_60_70, HTML_NONELEMENT_80_90, __HTML_LINK_IMAGE, __HTML_LENGTH_0000_1024, __HTML_LENGTH_1024_1536, __HTML_LENGTH_1536_2048, __HTML_LENGTH_512, __COMMENT_EXISTS, __HTML_LENGTH_384, __TAG_EXISTS_CENTER, __HTML_TITLE_120, __HTML_TITLE_SUBJ_DIFF, __HTML_CHARSET_FARAWAY, HTML_IFRAME_SRC, __MIME_ATTACHMENT, __DC_IMG_TEXT_RATIO, __GIF_ATTACH_1, __GIF_ATTACH_2P, __PNG_ATTACH_1, __PNG_ATTACH_2P, __JPEG_ATTACH_1, __JPEG_ATTACH_2P, __GIF_AREA_180K, __PNG_AREA_180K, __NONEMPTY_BODY, __UPPERCASE_25_50, __UPPERCASE_50_75, __UPPERCASE_75_100, REMOVE_BEFORE_LINK, GUARANTEED_100_PERCENT, DEAR_FRIEND, DEAR_SOMETHING, BILLION_DOLLARS, EXCUSE_4, EXCUSE_24, EXCUSE_REMOVE, STRONG_BUY, STOCK_ALERT, NOT_ADVISOR, PREST_NON_ACCREDITED, BODY_ENHANCEMENT, BODY_ENHANCEMENT2, IMPOTENCE, NA_DOLLARS, US_DOLLARS_3, MILLION_USD, URG_BIZ, MONEY_BACK, FREE_QUOTE_INSTANT, BAD_CREDIT, REFINANCE_YOUR_HOME, REFINANCE_NOW, NO_MEDICAL, DIET_1, FIN_FREE, FORWARD_LOOKING, ONE_TIME, JOIN_MILLIONS, MARKETING_PARTNERS, LOW_PRICE, UNCLAIMED_MONEY, OBSCURED_EMAIL, BANG_OPRAH, ACT_NOW_CAPS, MORE_SEX, BANG_GUAR, __RUDE_HTML_1, __RUDE_HTML_2, __RUDE_HTML_3, __RUDE_HTML_4, INVESTMENT_ADVICE, MALE_ENHANCE, PRICES_ARE_AFFORDABLE, REPLICA_WATCH, EM_ROLEX, FREE_PORN, CUM_SHOT, LIVE_PORN, __MIME_HTML, __TAG_EXISTS_BODY, __TAG_EXISTS_HEAD, __TAG_EXISTS_HTML, __TAG_EXISTS_META, __TAG_EXISTS_STYLE, __TAG_EXISTS_SCRIPT, __MY_SERVERS_FOUND, __HAVE_BOUNCE_RELAYS, __BOUNCE_ESMTP, __BOUNCE_OOO_2, __BOUNCE_OOO_3, __BOUNCE_NEVER_SEE, __BOUNCE_NONWORKING, __BOUNCE_ETRUST, __BOUNCE_NO_RESEND, __VBOUNCE_EXIM, __VBOUNCE_STRIP_ATTACH, __VBOUNCE_GUIN, __VBOUNCE_CISCO, __VBOUNCE_SMTP, __VBOUNCE_AOL, __VBOUNCE_DUTCH, __VBOUNCE_MAILMARSHAL, __VBOUNCE_VALERT, __VBOUNCE_REJ_FILT, __VBOUNCE_MAILSWEEP, __VBOUNCE_NAV3, __VBOUNCE_AMAVISD2, __VBOUNCE_DOMINO2, __VBOUNCE_ATTACHMENT0, __VBOUNCE_AVREPORT0, __VBOUNCE_MAILSWEEP2, __VBOUNCE_CLICKBANK, __VBOUNCE_QUOTED_EXE, __VBOUNCE_ATT_QUAR, __VBOUNCE_SECURIQ, BAYES_00, BAYES_05, BAYES_20, BAYES_40, BAYES_50, BAYES_60, BAYES_80, BAYES_95, BAYES_99, MICROSOFT_EXECUTABLE, MIME_SUSPECT_NAME, FUZZY_AFFORDABLE, FUZZY_AMBIEN, FUZZY_BILLION, FUZZY_CPILL, FUZZY_CREDIT, FUZZY_ERECT, FUZZY_GUARANTEE, FUZZY_MEDICATION, FUZZY_MILLION, FUZZY_MONEY, FUZZY_MORTGAGE, FUZZY_OBLIGATION, FUZZY_OFFERS, FUZZY_PHARMACY, FUZZY_PHENT, FUZZY_PRESCRIPT, FUZZY_PRICES, FUZZY_REFINANCE, FUZZY_REMOVE, FUZZY_ROLEX, FUZZY_SOFTWARE, FUZZY_THOUSANDS, FUZZY_VLIUM, FUZZY_VIOXX, FUZZY_VPILL, FUZZY_XPILL, UNWANTED_LANGUAGE_BODY, BODY_8BITS, URIBL_SBL, URIBL_DBL_SPAM, URIBL_DBL_REDIR, URIBL_DBL_ERROR, URIBL_SC_SURBL, URIBL_WS_SURBL, URIBL_PH_SURBL, URIBL_MW_SURBL, URIBL_AB_SURBL, URIBL_JP_SURBL, URIBL_BLACK, URIBL_GREY, URIBL_RED, URIBL_BLOCKED, AXB_3LITTLE_PIGS, AXB_BODYMAIL_SBL112884, BANKING_LAWS, BASE64_LENGTH_78_79, BASE64_LENGTH_79_INF, CN_B2B_SPAMMER, CURR_PRICE, DEAR_BENEFICIARY, DEAR_EMAIL_USER, DEAR_WINNER, EMRCP, FRT_ADOBE2, FRT_APPROV, FRT_BIGGERMEM1, FRT_OFFER2, FRT_PENIS1, FRT_PRICE, FRT_ROLEX, FUZZY_MERIDIA, HK_SCAM_N1, HK_SCAM_N13, HK_SCAM_N15, HK_SCAM_N2, HK_SCAM_N3, HK_SCAM_N8, HK_SCAM_S15, HK_SCAM_S25, HK_SCAM_S4, HK_SCAM_S7, HTTPS_HTTP_MISMATCH, LONG_TERM_PRICE, LOOPHOLE_1, SHORT_TERM_PRICE, TVD_ACT_193, TVD_APPROVED, TVD_DEAR_HOMEOWNER, TVD_FUZZY_DEGREE, TVD_FUZZY_FINANCE, TVD_FUZZY_FIXED_RATE, TVD_FUZZY_MICROCAP, TVD_FUZZY_PHARMACEUTICAL, TVD_FUZZY_SYMBOL, TVD_INCREASE_SIZE, TVD_LINK_SAVE, TVD_PH_REC, TVD_PH_SEC, TVD_QUAL_MEDS, TVD_SECTION, TVD_SILLY_URI_OBFU, TVD_STOCK1, TVD_VISIT_PHARMA, T_FRT_ABSOLUT, T_FRT_ADULT2, T_FRT_BEFORE, T_FRT_BELOW2, T_FRT_CANSPAM, T_FRT_CLICK, T_FRT_COCK, T_FRT_CONTACT, T_FRT_ERECTION, T_FRT_ESTABLISH, T_FRT_EXPERIENCE, T_FRT_FOLLOW1, T_FRT_FOLLOW2, T_FRT_FREE, T_FRT_FRIEND, T_FRT_FUCK1, T_FRT_HEALTH, T_FRT_HOUR, T_FRT_INCOME, T_FRT_INTEREST, T_FRT_LITTLE, T_FRT_LOLITA1, T_FRT_OPPORTUN1, T_FRT_PACKAGE, T_FRT_PAYMENT, T_FRT_PHARMAC, T_FRT_POSSIBLE, T_FRT_PROFILE1, T_FRT_PROFILE2, T_FRT_PROFIT1, T_FRT_PROFIT2, T_FRT_PUSSY, T_FRT_SLUT, T_FRT_STOCK1, T_FRT_STOCK2, T_FRT_VIRGIN1, T_FUZZY_SPRM, T_KAM_HTML_FONT_INVALID, T_LFUZ_PWRMALE, T_TVD_FUZZY_SECTOR, T_TVD_FUZZY_SECURITIES, T_TVD_MIME_EPI, T_TVD_MIME_NO_HEADERS, URIBL_RHS_DOB, URI_OBFU_WWW, __ACH_CANCELLED_01, __ACH_CANCELLED_02, __ACH_CANCELLED_03, __ACH_CANCELLED_04, __AFF_004470_NUMBER, __AFF_LOTTERY, __AFR_UNION, __AGREED_RATIO, __AM_DYING, __ATM_CARD, __ATTN_MAIL_USER, __BACK_SCRATCH, __BANK_DRAFT, __BARRISTER, __BENEFICIARY, __BENIN, __BIGNUM_EMAILS, __BODY_STARTS_WITH_FROM_LINE, __BODY_TEXT_LINE, __BODY_XHTML, __BURKINA_FASO, __CAN_HELP, __CASHPRZ, __CHARITY, __CLEAN_MAILBOX, __COMPENSATION, __CONTACT_ATTY, __CONTACT_YOU, __COURIER, __DBLCLAIM, __DEAD_PARENT, __DEAL, __DECEASED, __DESTROY_ME, __DIED_IN, __DIPLOMATIC, __DLND_ATTACH, __DORMANT_ACCT, __DOS_BODY_FRI, __DOS_BODY_MON, __DOS_BODY_SAT, __DOS_BODY_STOCK, __DOS_BODY_SUN, __DOS_BODY_THU, __DOS_BODY_TICKER, __DOS_BODY_TUE, __DOS_BODY_WED, __DOS_COMING_TO_YOUR_PLACE, __DOS_CORRESPOND_EMAIL, __DOS_DROP_ME_A_LINE, __DOS_EMAIL_DIRECTLY, __DOS_FIN_ADVANTAGE, __DOS_HI, __DOS_I_AM_25, __DOS_I_DRIVE_A, __DOS_LET_GO_JOB, __DOS_LINK, __DOS_MEET_EACH_OTHER, __DOS_MY_OLD_JOB, __DOS_PERSONAL_EMAIL, __DOS_STEADY_COURSE, __DOS_STRONG_CF, __DOS_TAKING_HOME, __DOS_WRITE_ME_AT, __EARLY_DEMISE, __EX_CUSTOMER, __FBI_BODY_SHOUT_1, __FB_CONGRADS, __FB_COST, __FB_LOTTERY, __FB_NATIONAL, __FB_NUM_PERCNT, __FB_S_PRICE, __FB_S_STOCK, __FB_TOUR, __FEES, __FIFTY_FIFTY, __FOUND_YOU, __FRAUD, __FRAUD_IOV, __FRAUD_PTX, __FRAUD_XWW, __FRT_GOLD, __FRT_SILVER, __F_LARGE_MONEY, __F_LARGE_MONEY_2, __GHANA, __GIVE_MONEY, __HAS_ANY_EMAIL, __HAS_WON_01, __HK_LOTTO_1, __HK_LOTTO_2, __HK_LOTTO_BALLOT, __HK_LOTTO_JACKPOT, __HK_LOTTO_STAATS, __HTML_COMMENT_10000, __HTML_COMMENT_20000, __HTML_COMMENT_30000, __HTML_COMMENT_50000, __HUSH_HUSH, __INHERIT_PMT, __INTL_BANK, __INVEST_COUNTRY, __INVEST_MONEY, __IS_LEGAL, __IVORY_COAST, __I_INHERIT, __I_WILL_YOU, __KAM_LOTTO2, __LOCK_MAILBOX, __LOTTO_ADMITS_1, __LOTTO_ADMITS_2, __LOTTO_AGENT_01, __LOTTO_AGENT_02, __LOTTO_DEPT, __LOTTO_RELATED, __LOTTO_VERIFY, __LOTTO_WINNINGS, __LOTTO_WIN_01, __LUCKY_WINNER, __LUCRATIVE, __MAILBOX_FULL, __MAILBOX_FULL_SE, __MAIL_ACCT_ACCESS1, __MAIL_ACCT_ACCESS2, __MILLIONS, __MOVE_MONEY, __MY_FORTUNE, __NEXT_OF_KIN, __NIGERIA, __NOT_DEAD_YET, __NOT_SCAM, __OUR_BEHALF, __PAY_YOU, __PLS_REVIEW, __RANDOM_PICK, __SCAM, __SHARE_IT, __STYLE_TAG_IN_BODY, __SUBSCRIPTION_INFO, __SUM_OF_FUND, __SURVEY, __SURVIVORS, __SYSADMIN, __THEY_INHERIT, __TO_YOUR_ACCT, __TRAVEL_AGENT, __TRAVEL_BUSINESS, __TRAVEL_PROFILE, __TRAVEL_RESERV, __TRTMT_DEFILED, __TRUNK_BOX, __TRUSTED_CHECK, __TVD_PH_BODY_01, __TVD_PH_BODY_02, __TVD_PH_BODY_03, __TVD_PH_BODY_04, __TVD_PH_BODY_05, __TVD_PH_BODY_06, __TVD_PH_BODY_07, __TVD_PH_BODY_08, __TVD_PH_BODY_ACCOUNTS_POST, __TVD_PH_BODY_ACCOUNTS_PRE, __UN, __UNSUB_EMAIL, __UPGR_MAILBOX, __VALIDATE_MAILBOX, __VALIDATE_MBOX_SE, __V_ACCOLADES, __V_ACHIEVEMENT, __V_BESTOFAWARD, __V_BIOGRAPHY, __V_CBNVANITY, __V_DISTINGUISHED, __V_DPHPVANITY, __V_EXCELLENCE, __V_EXECS_PROS, __V_HONOR_SOCIETY, __V_INFORM_YOU, __V_INNERCIRCLE, __V_NOMINATION, __V_NO_COST, __V_PRINCETONPRE, __V_PUB_DEADLINE, __V_RECOGNITION, __V_REGISTRY, __V_SBCAVANITY, __V_SHMUCK, __V_USCAVANITY, __V_WHOSWHO, __WEBMAIL_ACCT, __WIDOW, __WILL_LEGAL, __WIRE_XFR, __YOUR_BANK, __YOUR_FUND, __YOUR_PERM, __YOUR_PROFIT, __YOU_ASSIST, __YOU_HAVE_WON, __YOU_INHERIT, __YOU_WON_01, __YOU_WON_02, __YOU_WON_03, __YOU_WON_04, __YOU_WON_05, __hk_bigmoney
